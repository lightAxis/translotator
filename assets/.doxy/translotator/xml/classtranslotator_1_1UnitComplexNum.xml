<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtranslotator_1_1UnitComplexNum" kind="class" language="C++" prot="public">
    <compoundname>translotator::UnitComplexNum</compoundname>
    <basecompoundref refid="classtranslotator_1_1ComplexNum" prot="public" virt="non-virtual">translotator::ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</basecompoundref>
    <templateparamlist>
      <param>
        <type>typename Type</type>
        <defval>TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtranslotator_1_1UnitComplexNum_1a41fe8c33564e479724e972e1ac579a07" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static ObjectType</type>
        <definition>constexpr static ObjectType translotator::UnitComplexNum&lt; Type &gt;::objType</definition>
        <argsstring></argsstring>
        <name>objType</name>
        <initializer>= ObjectType::UNIT_COMPLEX_NUM</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="40" column="37" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1af6790bdbe2b4fe38681343ada785fd83" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitComplexNum&lt; Type &gt;::UnitComplexNum</definition>
        <argsstring>(const ComplexNum&lt; Type &gt; &amp;cplx)</argsstring>
        <name>UnitComplexNum</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>cplx</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="37" column="18" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a8b5ef129cd33b2458f19705342cf5ff3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitComplexNum&lt; Type &gt;::UnitComplexNum</definition>
        <argsstring>()</argsstring>
        <name>UnitComplexNum</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="46" column="16" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a9b96cd60d3fd2aa149ba46a588bf9542" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitComplexNum&lt; Type &gt;::UnitComplexNum</definition>
        <argsstring>(const Type &amp;angle)</argsstring>
        <name>UnitComplexNum</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="47" column="18" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a5ac97bcc19971bc5ce7d08679a9dd64a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::operator+</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator+ operator </para>
        </briefdescription>
        <detaileddescription>
<para>operators <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="65" column="27" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="65" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a2b5f41b2b69ecd898e0e31bab3820147" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitComplexNum&lt; Type &gt;::operator-</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator- operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="76" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="76" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a7214dd8df5c3c867908e646c64826c80" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitComplexNum&lt; Type &gt;::operator*</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator* operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Unit * Unit = Unit, </para>
</simplesect>
<simplesect kind="note"><para>Unit * Complex = Complex, </para>
</simplesect>
<simplesect kind="note"><para>Unit * Type = Complex, </para>
</simplesect>
<simplesect kind="note"><para>else, follows the matrix multiplication rule </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="91" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="91" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a1f3aa545f3c2201c4b620f6f94485c7e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitComplexNum&lt; Type &gt;::operator*=</definition>
        <argsstring>(const UnitComplexNum&lt; Type &gt; &amp;other)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Unit * Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="121" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="121" bodyend="124"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1abe8600544004050058968d69ad562a36" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::complexNumMul</definition>
        <argsstring>(const UnitComplexNum&lt; Type &gt; &amp;other) const</argsstring>
        <name>complexNumMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="131" column="31" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="131" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a2e615e602555547d90d0b0f6edf61a72" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::complexNumMul</definition>
        <argsstring>(const ComplexNum&lt; Type &gt; &amp;other) const</argsstring>
        <name>complexNumMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="133" column="27" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="133" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a96b6772c944caef992c24e03226e97cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitComplexNum&lt; Type &gt;::complexNumMulEq</definition>
        <argsstring>(const UnitComplexNum&lt; Type &gt; &amp;other)</argsstring>
        <name>complexNumMulEq</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="140" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="140" bodyend="140"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a9b13fc1519f0eca4df7c92034f27735d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitComplexNum&lt; Type &gt;::operator/</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator/ operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Unit / Unit = Unit, </para>
</simplesect>
<simplesect kind="note"><para>Unit / Complex = Complex, </para>
</simplesect>
<simplesect kind="note"><para>Unit / Type = Complex, </para>
</simplesect>
<simplesect kind="note"><para>else, follows the matrix multiplication rule </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="156" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="156" bodyend="178"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1aeefd5fa315728ee32ef8307a59f9f003" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitComplexNum&lt; Type &gt;::operator/=</definition>
        <argsstring>(const UnitComplexNum&lt; Type &gt; &amp;other)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Unit / Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="184" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="184" bodyend="187"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a8ef60221e0fffa8b1510d3135b486922" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::complexNumDiv</definition>
        <argsstring>(const UnitComplexNum&lt; Type &gt; &amp;other) const</argsstring>
        <name>complexNumDiv</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="193" column="31" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="193" bodyend="193"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1ab9d0c219efefe5108d61b31f2c87a4ea" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::complexNumDiv</definition>
        <argsstring>(const ComplexNum&lt; Type &gt; &amp;other) const</argsstring>
        <name>complexNumDiv</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="195" column="27" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="195" bodyend="195"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1aa625db208fada895d48237df0e27475c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitComplexNum&lt; Type &gt;::complexNumDivEq</definition>
        <argsstring>(const UnitComplexNum&lt; Type &gt; &amp;other)</argsstring>
        <name>complexNumDivEq</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>alias for operator/ for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="197" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="197" bodyend="197"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a5305ecca94d0de44303383e316ccc2f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>return normalized unit complex number </para>
        </briefdescription>
        <detaileddescription>
<para>utils </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="208" column="31" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="208" bodyend="211"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a1f6c199b3363c72a2aa29ae350be1484" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::conjugated</definition>
        <argsstring>() const</argsstring>
        <name>conjugated</name>
        <briefdescription>
<para>return conjugated unit complex number </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="212" column="31" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="212" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a3a69673ff5187b689eacc33102fd3bb8" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::inversed</definition>
        <argsstring>() const</argsstring>
        <name>inversed</name>
        <briefdescription>
<para>return inversed unit complex number. It is same as conjugated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="216" column="31" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a7f36e661868786d4512e578baff08cdc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitComplexNum&lt; Type &gt;::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="220" column="21" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="220" bodyend="220"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a8e028221c69ecc3daf03cca87e1da2e5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt;</type>
        <definition>Vector&lt;2, Type&gt; translotator::UnitComplexNum&lt; Type &gt;::rotateVector2D</definition>
        <argsstring>(const Vector&lt; 2, Type &gt; &amp;v) const</argsstring>
        <name>rotateVector2D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>inverse this unit complex number </para>
        </briefdescription>
        <detaileddescription>
<para>rotate 2D vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="222" column="23" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="222" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1aa636d6892638400ef547bbd3e9a7d41d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::pow</definition>
        <argsstring>(const Type t) const</argsstring>
        <name>pow</name>
        <param>
          <type>const Type</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>return this unit complex number to the power of t. Using Lie algebra. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="227" column="31" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="227" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a40a938922b63732afa80416a078644c0" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; 2, Type &gt;</type>
        <definition>SOGroup&lt;2, Type&gt; translotator::UnitComplexNum&lt; Type &gt;::toRotMatrix2D</definition>
        <argsstring>() const</argsstring>
        <name>toRotMatrix2D</name>
        <briefdescription>
<para>return identity unit complex number </para>
        </briefdescription>
        <detaileddescription>
<para>casting return 2D rotation matrix </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="243" column="24" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="243" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a52cf3b719ffbe38a4b9709041ba72c2e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>&lt; Type &gt;</type>
        <definition>AxisAngle&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::toAxisAngle</definition>
        <argsstring>() const</argsstring>
        <name>toAxisAngle</name>
        <briefdescription>
<para>return axis angle representation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="248" column="26" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="248" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a9052c1cd65890df314d074baaa8597fb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EULER_ORDER</type>
            <declname>AxisOrder</declname>
            <defname>AxisOrder</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1EulerAngle" kindref="compound">EulerAngle</ref>&lt; Type, AxisOrder &gt;</type>
        <definition>EulerAngle&lt;Type, AxisOrder&gt; translotator::UnitComplexNum&lt; Type &gt;::toEulerAngle2D</definition>
        <argsstring>() const</argsstring>
        <name>toEulerAngle2D</name>
        <briefdescription>
<para>return euler angle representation </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="254" column="27" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="254" bodyend="258"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1ae9be4f3461b78ac1078a97ab25e3e992" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; operator*</definition>
        <argsstring>(const ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Complex * Unit = Complex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="111" column="34" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="111" bodyend="115"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1a95b6c75087282ab379655e8b7576e6d2" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; operator*</definition>
        <argsstring>(const Type &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Type &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Type * Unit = Complex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="116" column="34" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="116" bodyend="120"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1aa0b2478ac5d0e8ff5212cca63abed204" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator*=</definition>
        <argsstring>(ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Complex * Unit = Complex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="125" column="28" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="125" bodyend="129"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1ac9185ee5b54f62ae623a0c1e1d9e56d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; complexNumMul</definition>
        <argsstring>(const ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>complexNumMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator* for readability </para>
        </briefdescription>
        <detaileddescription>
<para>alias for operator* for readability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="135" column="34" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1ab19943b0f0d9c06ed7ade91389f5fd4d" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void complexNumMulEq</definition>
        <argsstring>(ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>complexNumMulEq</name>
        <param>
          <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator*= for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="142" column="28" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="142" bodyend="145"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1a8ddff98dee5bc36f99eb741169ada52e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt;</type>
        <definition>ComplexNum&lt;Type&gt; operator/</definition>
        <argsstring>(const ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Complex / Unit = Complex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="179" column="34" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="179" bodyend="183"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1af25d767c3dc8f2cde9b89e3a64e78508" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator/=</definition>
        <argsstring>(ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Complex / Unit = Complex. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="188" column="28" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="188" bodyend="192"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitComplexNum_1ab1bc08aab06490389250eaf00b75b35a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void complexNumDivEq</definition>
        <argsstring>(ComplexNum&lt; Type &gt; &amp;lhs, const UnitComplexNum&lt; Type &gt; &amp;rhs)</argsstring>
        <name>complexNumDivEq</name>
        <param>
          <type><ref refid="classtranslotator_1_1ComplexNum" kindref="compound">ComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator/= for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="199" column="28" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="199" bodyend="203"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitComplexNum_1a601c113002a2817a5843c8b2ed799752" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>static UnitComplexNum&lt;Type&gt; translotator::UnitComplexNum&lt; Type &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>static functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitComplexNum.hpp" line="237" column="38" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="237" bodyend="237"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>translotator::UnitComplexNum&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1UnitComplexNum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>translotator::ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</label>
        <link refid="classtranslotator_1_1ComplexNum"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>translotator::UnitComplexNum&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1UnitComplexNum"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="2">
        <label>translotator::ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</label>
        <link refid="classtranslotator_1_1ComplexNum"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
    </collaborationgraph>
    <location file="include/translotator/objects/UnitComplexNum.hpp" line="34" column="5" bodyfile="include/translotator/objects/UnitComplexNum.hpp" bodystart="35" bodyend="259"/>
    <listofallmembers>
      <member refid="classtranslotator_1_1MatrixBase_1a47fdb58bc41fa4fe1df99f8db9c8d825" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad383e1f78f6abd1c368945fa8b883bd0" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a240eaa7e3260d8154b98f843091d0dd7" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2ComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6ba81df86ee7444fd12085d45d220db1" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2ComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3b83a32e4e36acbf692f8d37652a592e" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2DualNumber</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a541c9f958dad45d5a0c58baf581aecb8" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2DualNumberRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab8fa863f2a015eb6ec81225c29a38169" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2DualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9e98013f1aaae87b9ddfc02989831cb7" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2DualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab2a12c8955040481906bc6921fcd3e49" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2Matrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac68b42d61fc1b37e775201939a2b974e" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2MatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5d6fc1d9f28cbddfcc3d84d2a1399546" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2Quaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a4337e1ab1f890f353ab7500e7a0b5d13" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2QuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a347f048dea85dfcb511b251bcc67a02f" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2SOGroup</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6c7b5cfbc31827a08626276f426b0c29" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2SOGroupRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a98881e399ea44c14116b8b3540cf9b59" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2SquareMatrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac71dc8fc81132db5fd1d371b04abb6d0" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2SquareMatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad3e6217331f7bee4dea61c1e5f3cb999" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5e58dda08116d760edd0f5e2b96c41f0" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2UnitComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a02ea9383482a196e452f8af815c295d9" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9cca30ec8afe0187659012b5c714fb19" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2UnitDualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2add8819f4e5dfcab056fec8c9756056" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aee2aae9874fdcfa4dca7a3a26d7a77ab" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2UnitQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb91e4a5737ace925a23c3f5e11e2532" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2Vector</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1afd185e6539db2e40864f309133a51a79" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>cast2VectorRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb925de5e627dc714aa27933730514e8" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>castContainer</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a060adc62a324b4377f863eba096ceb51" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac496fcf985c129b48da7b286c01a6863" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2cfeceed7f99058bf765180b19050523" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>castDataType</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab218ec09e5280731940c55d86e3655ea" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>col</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab6f1acc802eca0c13f5b1f0d7d8ad834" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>COLS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad0253ec3dcedd1f905f887b7c256213c" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>colSize</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1acf036449557b03a45dc877e9c2dc4f5d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>ComplexNum</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a9df1ca6b29578e55bb75383d9659cac2" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>ComplexNum</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a8ef60221e0fffa8b1510d3135b486922" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumDiv</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1ab9d0c219efefe5108d61b31f2c87a4ea" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumDiv</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ad6458789ddafa50863fead5e3c14b72d" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>complexNumDiv</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1aa625db208fada895d48237df0e27475c" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumDivEq</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1ab1bc08aab06490389250eaf00b75b35a" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumDivEq</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ab49d104f426772076fd823ba78198df0" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>complexNumDivEq</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1abe8600544004050058968d69ad562a36" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumMul</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a2e615e602555547d90d0b0f6edf61a72" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumMul</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1ac9185ee5b54f62ae623a0c1e1d9e56d9" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumMul</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a6dd87d708e5bb48f5033c6acd5d48abb" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>complexNumMul</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a96b6772c944caef992c24e03226e97cf" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumMulEq</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1ab19943b0f0d9c06ed7ade91389f5fd4d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>complexNumMulEq</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1aef688cb7822585f986427c004833f59d" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>complexNumMulEq</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ab0c8fa7a224bba11cd7739016bf01c02" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>conjugate</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a1f6c199b3363c72a2aa29ae350be1484" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>conjugated</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a8a9385eb28706226a8bbaaa8b51923b5" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>copyTo</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1fea766824100dbd2fa5a216a61afc46" prot="protected" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>data_</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a442deedb4154e8e74af4ba780b9674b1" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>DATATYPE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a37eede5be5d720709f5f65ab5c7efb4a" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>eye</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a10472e837144233d66926ab55e3b4e92" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>fill</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a7fece031c63a9ce6edaa58b403770165" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>frobeniusNorm</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a646b7fb5c13368f5a854ee24b9766e1e" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>frobeniusNormSquared</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1dcb53f092bc48e65fac4dbc50be6033" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>getData</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a601c113002a2817a5843c8b2ed799752" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>identity</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1abbf67a66efa837bb6f91acef4dae2f9a" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>Im</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ae9b454426d9e45c1cfd53c33a38981ca" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>Im</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a7f36e661868786d4512e578baff08cdc" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>inverse</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a3a69673ff5187b689eacc33102fd3bb8" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>inversed</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5c4b77c1ca1f9c1c56c2b54e156b3465" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>MATRIX_BASE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a251a9858487619a26be982aff3e6becf" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a92188d067565d2d2d15a1b351691b5ec" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5ab5684eb668e67fa7b56e3a1ace6d92" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2eb3cfe7fef246df96d6c6839312c5c7" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a01618e01c38cef87bfd460beac794cfd" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9780b7e145b7f6c84665643689a8991f" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>NaN</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ac236d2e5aecd599b026a4624ad150315" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>norm</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a1687c9d45c9bf3e498fcc77319420215" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>normalize</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a5305ecca94d0de44303383e316ccc2f9" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>normalized</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ac1e04624c53d891104aa3a95d3e02f51" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>normSquared</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1addfbf3b1720d81259cb506bb1c842329" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>OBJECT_TYPE</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a41fe8c33564e479724e972e1ac579a07" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>objType</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac3378d6df255caf33fe89e787a48a11b" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>ones</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9725e6c9ace3b3b45f56bc88599250ad" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa9c22193db8c13d3a9847b4f709054bd" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a7214dd8df5c3c867908e646c64826c80" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1ae9be4f3461b78ac1078a97ab25e3e992" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a95b6c75087282ab379655e8b7576e6d2" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a325c0c5f382606d0c4caec53511d38c2" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac1845354b3f57b857574469cfb9449c7" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a188d55faa3c3d76adf785fa6ad09a998" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a1f3aa545f3c2201c4b620f6f94485c7e" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1aa0b2478ac5d0e8ff5212cca63abed204" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a6e738205d924949f4303b05dccd0b9e2" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9fc66df0442accce22aaf51c2bb1ac85" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a5ac97bcc19971bc5ce7d08679a9dd64a" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a79d0ad4e0873356325df2fcd103e5952" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a690755b7f6c6a688f70b890e7b0b899c" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator+=</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a2b5f41b2b69ecd898e0e31bab3820147" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aec8347c0cb478c90c363f404f85f6597" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a65a69ae6c21bd6b0fa864270b007802a" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6a7643257fcf32adaff8c6034a3b4c03" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator-=</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a9b13fc1519f0eca4df7c92034f27735d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a8ddff98dee5bc36f99eb741169ada52e" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1af0ae8c57a090eabc6bf7335e2a8f038f" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acca07931ca0268f437b3d2e8b7b303c5" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1aeefd5fa315728ee32ef8307a59f9f003" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1af25d767c3dc8f2cde9b89e3a64e78508" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a2c9118cf5ed3d976b72db431ec78066e" prot="public" virt="non-virtual" ambiguityscope="ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3f896eec178e879273a17f8fc5a817cf" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 2, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, ComplexNum&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitComplexNum</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3d259a0af89939865e167551b25d186d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator=</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1ac22bd4ea25f953bc736104e100cb8ecb" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator[]</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a4e2a517b55799bfdbbe0970e0251e3e1" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>operator[]</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1aa636d6892638400ef547bbd3e9a7d41d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>pow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a767091c7e23c4dba39ea1275261ea1b3" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>print</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a21fa256d53d75219185ee92711bbf65f" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>Re</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1a979b2d071181c7f6e2fbb8682b1d777d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>Re</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a8e028221c69ecc3daf03cca87e1da2e5" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>rotateVector2D</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ae61f384241d4b12f54d816a97d090e7d" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>row</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1adc3ebb353990f9178c8c2b0ec20f4f07" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>ROWS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a24a5add5ff0fe1c1d465997c421e2088" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>rowSize</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab18c063f78f4d45797cb585e7bf2e32b" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a0df51ed7e80a011b5accfcd4b15e25c1" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a28a999eff129fd34e6655bd69803db0c" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6345caf6cd8951656f04a34aae2874c" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac22efb20214caa3f162197d8a683a7bc" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3c04f7dc6c48308fc8805b609fc67bd3" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aeb991a10367bf7972b6b7e84a2a9a850" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>swapCols</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a750f1fefac69a66d47f053f202e95102" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>swapRows</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad8a85814b9fc44098fa04a5e825c11b8" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>T</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a52cf3b719ffbe38a4b9709041ba72c2e" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>toAxisAngle</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a9052c1cd65890df314d074baaa8597fb" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>toEulerAngle2D</name></member>
      <member refid="classtranslotator_1_1ComplexNum_1af3ef278c19d297ca18461bf4b4081352" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>toMulMatrix</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a40a938922b63732afa80416a078644c0" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>toRotMatrix2D</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a52ed10a72a7cae25898f2bcdf68380fb" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>toScalar</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1af6790bdbe2b4fe38681343ada785fd83" prot="private" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a8b5ef129cd33b2458f19705342cf5ff3" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1UnitComplexNum_1a9b96cd60d3fd2aa149ba46a588bf9542" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6df03c2dfc985ea79ebb0d9b0787cae" prot="public" virt="non-virtual"><scope>translotator::UnitComplexNum</scope><name>zeros</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
