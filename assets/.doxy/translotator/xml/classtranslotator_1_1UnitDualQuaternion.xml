<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtranslotator_1_1UnitDualQuaternion" kind="class" language="C++" prot="public">
    <compoundname>translotator::UnitDualQuaternion</compoundname>
    <basecompoundref refid="classtranslotator_1_1DualQuaternion" prot="public" virt="non-virtual">translotator::DualQuaternion&lt; Type &gt;</basecompoundref>
    <includes refid="UnitDualQuaternion_8hpp" local="no">UnitDualQuaternion.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtranslotator_1_1UnitDualQuaternion_1a17459f6fa3f9f5cc2c2e22f3c9ded1b5" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static ObjectType</type>
        <definition>constexpr static ObjectType translotator::UnitDualQuaternion&lt; Type &gt;::OBJECT_TYPE</definition>
        <argsstring></argsstring>
        <name>OBJECT_TYPE</name>
        <initializer>= ObjectType::UNIT_DUAL_QUATERNION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="42" column="37" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="42" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1aa3a03130a7c1960bfd1872886c678134" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitDualQuaternion&lt; Type &gt;::UnitDualQuaternion</definition>
        <argsstring>(const DualQuaternion&lt; Type &gt; &amp;dq)</argsstring>
        <name>UnitDualQuaternion</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>dq</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="38" column="18" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="38" bodyend="39"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a49b290b100cda79b9791d605462e91af" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitDualQuaternion&lt; Type &gt;::UnitDualQuaternion</definition>
        <argsstring>()</argsstring>
        <name>UnitDualQuaternion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="49" column="16" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="49" bodyend="56"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1aef4450183adedee1fb8ffc1e518ef870" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitDualQuaternion&lt; Type &gt;::UnitDualQuaternion</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;re, const Quaternion&lt; Type &gt; &amp;du)</argsstring>
        <name>UnitDualQuaternion</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>re</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>du</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="57" column="16" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="57" bodyend="58"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a6de6b70fdfc03cd389562cc92c708394" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitDualQuaternion&lt; Type &gt;::UnitDualQuaternion</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;rot, const Vector&lt; 3, Type &gt; &amp;t)</argsstring>
        <name>UnitDualQuaternion</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rot</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="59" column="16" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="59" bodyend="60"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a17e962e5278fc67f2d43671eaafba719" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
        <definition>const UnitQuaternion&lt;Type&gt;&amp; translotator::UnitDualQuaternion&lt; Type &gt;::Re</definition>
        <argsstring>() const</argsstring>
        <name>Re</name>
        <briefdescription>
<para>return real part of unit dual quaternion, <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>accessors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="65" column="37" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="65" bodyend="68"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1aca373ecff53d0c95b4370f6f3ef4b7f8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
        <definition>UnitQuaternion&lt;Type&gt;&amp; translotator::UnitDualQuaternion&lt; Type &gt;::Re</definition>
        <argsstring>()</argsstring>
        <name>Re</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="69" column="31" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="69" bodyend="69"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a983518f88ef191ec942a24c3d9a9fff5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::operator+</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator+ operator </para>
        </briefdescription>
        <detaileddescription>
<para>operators <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This operator is used to add two dual quaternions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="90" column="31" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="90" bodyend="93"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a99afa40473b678cfe65c926c445eeee4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::operator-</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator- operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This operator is used to subtract two dual quaternions. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="101" column="31" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="101" bodyend="104"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ab3e06e590597c5a2f5f00b37f0e45668" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitDualQuaternion&lt; Type &gt;::operator*</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator* operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Unit * Unit = Unit, </para>
</simplesect>
<simplesect kind="note"><para>Unit * Dual = Dual, </para>
</simplesect>
<simplesect kind="note"><para>Unit * Type = Dual, </para>
</simplesect>
<simplesect kind="note"><para>else, follows the matrix multiplication rule </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="115" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="115" bodyend="134"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a01181ab989acb853a6ec0d2df2539964" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::operator*=</definition>
        <argsstring>(const UnitDualQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Unit * Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="145" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="145" bodyend="148"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a1af37b544386fab0135f58f4e818cddf" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitDualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::dualQuatMul</definition>
        <argsstring>(const UnitDualQuaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>dualQuatMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="154" column="35" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="154" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ab4f03a2e00e8544a1917076eaa3e62da" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::dualQuatMul</definition>
        <argsstring>(const DualQuaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>dualQuatMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="156" column="31" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="156" bodyend="156"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ada1a52b09287a9aa9500a1a96bd851ec" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::dualQuatMulEq</definition>
        <argsstring>(const UnitDualQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>dualQuatMulEq</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="163" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="163" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ac5112f72a93195aeb91f866aed8e407e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitDualQuaternion&lt; Type &gt;::operator/</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator/ operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Unit / Unit = Unit, </para>
</simplesect>
<simplesect kind="note"><para>Unit / Dual = Dual, </para>
</simplesect>
<simplesect kind="note"><para>Unit / Type = Dual, </para>
</simplesect>
<simplesect kind="note"><para>else, follows the matrix multiplication rule </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="179" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="179" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a9b41b2c750b2e06a23b5e90f8e93c362" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::operator/=</definition>
        <argsstring>(const UnitDualQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Unit / Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="206" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="206" bodyend="209"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ab994ddea65ff2ff985afc77844682905" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitDualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::dualQuatDiv</definition>
        <argsstring>(const UnitDualQuaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>dualQuatDiv</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="215" column="35" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="215" bodyend="215"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a884d88e82b3ee688fdca9035bb257d2c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::dualQuatDiv</definition>
        <argsstring>(const DualQuaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>dualQuatDiv</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="217" column="31" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="217" bodyend="217"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a33e4551fef8905a92eaf2920cebabf8b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::dualQuatDivEq</definition>
        <argsstring>(const UnitDualQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>dualQuatDivEq</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>alias for operator/ for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="219" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="219" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1abb2705d9f2446e544135b00d57eccfeb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitDualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>return normalized unit dual quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>utils </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="230" column="35" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="230" bodyend="233"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ad771e49977be33b2d415c19baf20950b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="234" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="234" bodyend="234"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a794d9a1298236d669447c1b16ff6f7ec" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitDualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::conjugated</definition>
        <argsstring>() const</argsstring>
        <name>conjugated</name>
        <briefdescription>
<para>normalize unit dual quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>return conjugated unit dual quaternion. Primary conjugated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="236" column="35" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="236" bodyend="239"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a70198735d1f69bde77e9a2562da8362e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::conjugate</definition>
        <argsstring>()</argsstring>
        <name>conjugate</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="241" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="241" bodyend="241"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a8e58788627e858c153b8dc7d55e39195" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitDualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::inversed</definition>
        <argsstring>() const</argsstring>
        <name>inversed</name>
        <briefdescription>
<para>conjugate unit dual quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>return inversed unit dual quaternion. It is same as conjugated. </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="243" column="35" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="243" bodyend="246"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a79303c6705dd2ba0d5f50455c749b15f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitDualQuaternion&lt; Type &gt;::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="248" column="21" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ae10a5230ec0a88e8c60601e2fb3a12f5" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt;</type>
        <definition>Vector&lt;2, Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::actOnVector2D</definition>
        <argsstring>(const Vector&lt; 2, Type &gt; &amp;v) const</argsstring>
        <name>actOnVector2D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>inverse this unit dual quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>act on 2D vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="250" column="23" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="250" bodyend="253"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1ab9e06e3448b2b1651c06927390399406" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt;</type>
        <definition>Vector&lt;3, Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::actOnVector3D</definition>
        <argsstring>(const Vector&lt; 3, Type &gt; &amp;v) const</argsstring>
        <name>actOnVector3D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>act on 3D vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="254" column="23" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="254" bodyend="260"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a56faba398b7ec9bdbf3712296bb4768f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SEGroup" kindref="compound">SEGroup</ref>&lt; 2, Type &gt;</type>
        <definition>SEGroup&lt;2, Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::toSE2Group</definition>
        <argsstring>() const</argsstring>
        <name>toSE2Group</name>
        <briefdescription>
<para>convert to SE(2) group, Using only z axis rotation </para>
        </briefdescription>
        <detaileddescription>
<para>casting </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="275" column="24" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="275" bodyend="278"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1aecf85b7fe39db24b73a122567de76151" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SEGroup" kindref="compound">SEGroup</ref>&lt; 3, Type &gt;</type>
        <definition>SEGroup&lt;3, Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::toSE3Group</definition>
        <argsstring>() const</argsstring>
        <name>toSE3Group</name>
        <briefdescription>
<para>convert to SE(3) group </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="280" column="24" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="280" bodyend="283"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a3ba665f50c2c9c4addaa826a65f034bd" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt;</type>
        <definition>Vector&lt;2, Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::toTranslationVec2D</definition>
        <argsstring>() const</argsstring>
        <name>toTranslationVec2D</name>
        <briefdescription>
<para>return translation vector in 2D </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="285" column="23" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="285" bodyend="288"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a5c2170e31f0ca612f1f0b62e88a081a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt;</type>
        <definition>Vector&lt;3, Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::toTranslationVec3D</definition>
        <argsstring>() const</argsstring>
        <name>toTranslationVec3D</name>
        <briefdescription>
<para>return translation vector in 3D </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="290" column="23" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="290" bodyend="293"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1a860ac9e7fcf142542cef8a5a89efdf65" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; operator*</definition>
        <argsstring>(const DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Dual * Unit = Dual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="135" column="38" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="135" bodyend="139"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1ac897580e2006dd82cd876b9ed1d2f9d3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; operator*</definition>
        <argsstring>(const Type &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Type &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Type * Unit = Dual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="140" column="38" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="140" bodyend="144"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1afd15804994e1175bd4c4ea85389cbe49" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator*=</definition>
        <argsstring>(DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Dual * Unit = Dual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="149" column="28" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="149" bodyend="153"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1a1dee616953b05285883506d3ea66ad00" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; dualQuatMul</definition>
        <argsstring>(const DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>dualQuatMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator* for readability </para>
        </briefdescription>
        <detaileddescription>
<para>alias for operator* for readability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="158" column="38" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="158" bodyend="162"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1ab23bfdc1a6af0235fb50f183d5ac67a8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dualQuatMulEq</definition>
        <argsstring>(DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>dualQuatMulEq</name>
        <param>
          <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator*= for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="165" column="28" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="165" bodyend="168"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1a33ab2446032aaf7fb2ca1734ad56bede" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt;</type>
        <definition>DualQuaternion&lt;Type&gt; operator/</definition>
        <argsstring>(const DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Dual / Unit = Dual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="201" column="38" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="201" bodyend="205"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1a6b1f90c87e3d86f34b08dd6b002ff679" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator/=</definition>
        <argsstring>(DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Dual / Unit = Dual. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="210" column="28" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="210" bodyend="214"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitDualQuaternion_1af012dee597f49cb83fbffe4b6cbb4826" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void dualQuatDivEq</definition>
        <argsstring>(DualQuaternion&lt; Type &gt; &amp;lhs, const UnitDualQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>dualQuatDivEq</name>
        <param>
          <type><ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator/= for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="221" column="28" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="221" bodyend="225"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitDualQuaternion_1a7952fe4aebbc40f3ac0fccc07b4eaa7f" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref>&lt; Type &gt;</type>
        <definition>static UnitDualQuaternion&lt;Type&gt; translotator::UnitDualQuaternion&lt; Type &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
<para>identity unit dual quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>static functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="269" column="42" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="269" bodyend="269"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a unit dual quaternion. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>floating point type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="classtranslotator_1_1UnitDualQuaternion" kindref="compound">UnitDualQuaternion</ref> is a class that represents a unit dual quaternion. It is a subclass of <ref refid="classtranslotator_1_1DualQuaternion" kindref="compound">DualQuaternion</ref> and has a unit length. It is used to represent a rigid transformation in 3D space. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>translotator::DualQuaternion&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1DualQuaternion"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
      <node id="1">
        <label>translotator::UnitDualQuaternion&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1UnitDualQuaternion"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>translotator::DualQuaternion&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1DualQuaternion"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
      <node id="1">
        <label>translotator::UnitDualQuaternion&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1UnitDualQuaternion"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/translotator/objects/UnitDualQuaternion.hpp" line="35" column="5" bodyfile="include/translotator/objects/UnitDualQuaternion.hpp" bodystart="36" bodyend="294"/>
    <listofallmembers>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ae10a5230ec0a88e8c60601e2fb3a12f5" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>actOnVector2D</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ab9e06e3448b2b1651c06927390399406" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>actOnVector3D</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a47fdb58bc41fa4fe1df99f8db9c8d825" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad383e1f78f6abd1c368945fa8b883bd0" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a240eaa7e3260d8154b98f843091d0dd7" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2ComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6ba81df86ee7444fd12085d45d220db1" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2ComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3b83a32e4e36acbf692f8d37652a592e" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2DualNumber</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a541c9f958dad45d5a0c58baf581aecb8" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2DualNumberRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab8fa863f2a015eb6ec81225c29a38169" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2DualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9e98013f1aaae87b9ddfc02989831cb7" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2DualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab2a12c8955040481906bc6921fcd3e49" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2Matrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac68b42d61fc1b37e775201939a2b974e" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2MatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5d6fc1d9f28cbddfcc3d84d2a1399546" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2Quaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a4337e1ab1f890f353ab7500e7a0b5d13" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2QuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a347f048dea85dfcb511b251bcc67a02f" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2SOGroup</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6c7b5cfbc31827a08626276f426b0c29" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2SOGroupRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a98881e399ea44c14116b8b3540cf9b59" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2SquareMatrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac71dc8fc81132db5fd1d371b04abb6d0" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2SquareMatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad3e6217331f7bee4dea61c1e5f3cb999" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5e58dda08116d760edd0f5e2b96c41f0" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2UnitComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a02ea9383482a196e452f8af815c295d9" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9cca30ec8afe0187659012b5c714fb19" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2UnitDualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2add8819f4e5dfcab056fec8c9756056" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aee2aae9874fdcfa4dca7a3a26d7a77ab" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2UnitQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb91e4a5737ace925a23c3f5e11e2532" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2Vector</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1afd185e6539db2e40864f309133a51a79" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>cast2VectorRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb925de5e627dc714aa27933730514e8" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>castContainer</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a060adc62a324b4377f863eba096ceb51" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac496fcf985c129b48da7b286c01a6863" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2cfeceed7f99058bf765180b19050523" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>castDataType</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab218ec09e5280731940c55d86e3655ea" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>col</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab6f1acc802eca0c13f5b1f0d7d8ad834" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>COLS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad0253ec3dcedd1f905f887b7c256213c" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>colSize</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a70198735d1f69bde77e9a2562da8362e" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugate</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a794d9a1298236d669447c1b16ff6f7ec" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugated</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a4fd2c24fd6d37ad86f15726099ed37cc" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugatedDual</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1abb4355fa59ea257c05d8ffa90657d4c9" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugatedFull</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1af3297673c5a216e0cdbef925d6614ef9" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugatedPrimary</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a93b2817d1bf89baad40dd06531d3bc99" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugateDual</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a216894cae1b66da301ef63ba332f9188" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugateFull</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a20d78e029bdfd3aba2395d12abe28782" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>conjugatePrimary</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a8a9385eb28706226a8bbaaa8b51923b5" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>copyTo</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1fea766824100dbd2fa5a216a61afc46" prot="protected" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>data_</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a442deedb4154e8e74af4ba780b9674b1" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>DATATYPE</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ac127ca65a56781c36a15ecfd23160802" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>Du</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a89c3889c7826f625bad8d56338128488" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>Du</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ab994ddea65ff2ff985afc77844682905" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatDiv</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a884d88e82b3ee688fdca9035bb257d2c" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatDiv</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a33e4551fef8905a92eaf2920cebabf8b" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatDivEq</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1af012dee597f49cb83fbffe4b6cbb4826" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatDivEq</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a9d8f6260e191b3898e768592d248b8f3" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatDivEq</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ac010a93ef4ff1fb94c53279a3b68b532" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>DualQuaternion</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1abf6d568e96db97596c3f3b588b2db874" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>DualQuaternion</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1aec0b6e1aecff3e4e4d62ef31a96e4afd" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>DualQuaternion</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a8cd4c89b27a0c1a7917ed13cd8bdf293" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>DualQuaternion</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a1af37b544386fab0135f58f4e818cddf" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatMul</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ab4f03a2e00e8544a1917076eaa3e62da" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatMul</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a1dee616953b05285883506d3ea66ad00" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatMul</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ada1a52b09287a9aa9500a1a96bd851ec" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatMulEq</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ab23bfdc1a6af0235fb50f183d5ac67a8" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatMulEq</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a245ffc1c04f6e23b6631e07af4a0e744" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>dualQuatMulEq</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1af915d194d62ce3e36537062d780f6290" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dw</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ab3c30eacee33be1f69948f92b0bbea6e" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dw</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ae36f35e4abeb472f0517e9d87f64a3fc" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dx</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a700a9c21b6e01772144ebcb3c70d5b48" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dx</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a1c972d4d34608d3e066445b339101b00" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dy</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a0721d16ccd4dbe1eebb26cf204a753a6" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dy</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a1cffd0717bc56ce53409a920edbf9d09" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dz</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ab735f15fbc8ed1e4c5644d79d22f29df" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>dz</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a37eede5be5d720709f5f65ab5c7efb4a" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>eye</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a10472e837144233d66926ab55e3b4e92" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>fill</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a7fece031c63a9ce6edaa58b403770165" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>frobeniusNorm</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a646b7fb5c13368f5a854ee24b9766e1e" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>frobeniusNormSquared</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1dcb53f092bc48e65fac4dbc50be6033" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>getData</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a7952fe4aebbc40f3ac0fccc07b4eaa7f" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>identity</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a79303c6705dd2ba0d5f50455c749b15f" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>inverse</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a8e58788627e858c153b8dc7d55e39195" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>inversed</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5c4b77c1ca1f9c1c56c2b54e156b3465" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>MATRIX_BASE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a251a9858487619a26be982aff3e6becf" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a92188d067565d2d2d15a1b351691b5ec" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5ab5684eb668e67fa7b56e3a1ace6d92" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2eb3cfe7fef246df96d6c6839312c5c7" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a01618e01c38cef87bfd460beac794cfd" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9780b7e145b7f6c84665643689a8991f" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>NaN</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ad771e49977be33b2d415c19baf20950b" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>normalize</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a6e4456fc5f82455991c75574a06f32aa" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>normalize</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1abb2705d9f2446e544135b00d57eccfeb" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>normalized</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a62b06e64a76a663641372fbda95023ce" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>normDualNum</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a2efe6bc8ee40dd7c203013753c3561f2" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>normDualNumSquared</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a417a8df4f4bba3a2758c8e6efc665bb3" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>normScalar</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a74415ad848fc0c3fd4b52f763ef261e9" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>normScalarSquared</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a17459f6fa3f9f5cc2c2e22f3c9ded1b5" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>OBJECT_TYPE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac3378d6df255caf33fe89e787a48a11b" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>ones</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9725e6c9ace3b3b45f56bc88599250ad" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa9c22193db8c13d3a9847b4f709054bd" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ab3e06e590597c5a2f5f00b37f0e45668" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a860ac9e7fcf142542cef8a5a89efdf65" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ac897580e2006dd82cd876b9ed1d2f9d3" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1adf6436f6800d6a84557f6660a2fb91fc" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac1845354b3f57b857574469cfb9449c7" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;::"><scope>translotator::UnitDualQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a188d55faa3c3d76adf785fa6ad09a998" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;::"><scope>translotator::UnitDualQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a01181ab989acb853a6ec0d2df2539964" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1afd15804994e1175bd4c4ea85389cbe49" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a862452611ccca2be58cd3a4ade1d9e03" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9fc66df0442accce22aaf51c2bb1ac85" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;::"><scope>translotator::UnitDualQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a983518f88ef191ec942a24c3d9a9fff5" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a79d0ad4e0873356325df2fcd103e5952" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a690755b7f6c6a688f70b890e7b0b899c" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator+=</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a99afa40473b678cfe65c926c445eeee4" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aec8347c0cb478c90c363f404f85f6597" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a65a69ae6c21bd6b0fa864270b007802a" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6a7643257fcf32adaff8c6034a3b4c03" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator-=</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1ac5112f72a93195aeb91f866aed8e407e" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a33ab2446032aaf7fb2ca1734ad56bede" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a5fe769e75aa29a4baa340e306ba82787" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acca07931ca0268f437b3d2e8b7b303c5" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;::"><scope>translotator::UnitDualQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a9b41b2c750b2e06a23b5e90f8e93c362" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a6b1f90c87e3d86f34b08dd6b002ff679" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ad6bb98d3cb6930cc19a78f84bacbc404" prot="public" virt="non-virtual" ambiguityscope="translotator::DualQuaternion::"><scope>translotator::UnitDualQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3f896eec178e879273a17f8fc5a817cf" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 8, 1, Type, DualQuaternion&lt; Type &gt; &gt;::"><scope>translotator::UnitDualQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3d259a0af89939865e167551b25d186d" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator=</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a081d3ddcf3100df883b7b41f7bdfebcc" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator[]</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ac349b26fb5648af6a49d7138ab5f1265" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>operator[]</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a767091c7e23c4dba39ea1275261ea1b3" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>print</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a17e962e5278fc67f2d43671eaafba719" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>Re</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1aca373ecff53d0c95b4370f6f3ef4b7f8" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>Re</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ae61f384241d4b12f54d816a97d090e7d" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>row</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1adc3ebb353990f9178c8c2b0ec20f4f07" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>ROWS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a24a5add5ff0fe1c1d465997c421e2088" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rowSize</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1aaaeafc9ffd1d04a86260b1212ef051cd" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rw</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1abe5c63e9af651866255fbc47fbc8a552" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rw</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1ab5d61ee0286389a142c9a608be79d183" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rx</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a68a64685c23afb8a5d4c12ac537270a2" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rx</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1afaa1fb2e8ac0436ef6e6d500efb6598d" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>ry</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1adf40e7cb597d6f8212964cd9b9f918fa" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>ry</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1aefe5b97d915cd44f27c9379967e61cbf" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rz</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a81c9e5c8703ed931fb3f49b15d309d77" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>rz</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab18c063f78f4d45797cb585e7bf2e32b" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a0df51ed7e80a011b5accfcd4b15e25c1" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a28a999eff129fd34e6655bd69803db0c" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6345caf6cd8951656f04a34aae2874c" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac22efb20214caa3f162197d8a683a7bc" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3c04f7dc6c48308fc8805b609fc67bd3" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aeb991a10367bf7972b6b7e84a2a9a850" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>swapCols</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a750f1fefac69a66d47f053f202e95102" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>swapRows</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad8a85814b9fc44098fa04a5e825c11b8" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>T</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a9f7cb0f045ea06ca3c369b23fbf9d6b6" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toMulMatrix</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a72b1ffa40d5a1522a47a7523cf07404b" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toRightMulMatrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a52ed10a72a7cae25898f2bcdf68380fb" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toScalar</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a56faba398b7ec9bdbf3712296bb4768f" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toSE2Group</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1aecf85b7fe39db24b73a122567de76151" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toSE3Group</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a3ba665f50c2c9c4addaa826a65f034bd" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toTranslationVec2D</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a5c2170e31f0ca612f1f0b62e88a081a2" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>toTranslationVec3D</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1aa3a03130a7c1960bfd1872886c678134" prot="private" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a49b290b100cda79b9791d605462e91af" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1aef4450183adedee1fb8ffc1e518ef870" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1UnitDualQuaternion_1a6de6b70fdfc03cd389562cc92c708394" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a4f6d22876218de2cac388eb5c1eed1f4" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>zeros</name></member>
      <member refid="classtranslotator_1_1DualQuaternion_1a00b874bd2f74459baf3f7dab907604ed" prot="public" virt="non-virtual"><scope>translotator::UnitDualQuaternion</scope><name>~DualQuaternion</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
