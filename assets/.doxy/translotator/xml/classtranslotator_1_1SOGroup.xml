<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtranslotator_1_1SOGroup" kind="class" language="C++" prot="public">
    <compoundname>translotator::SOGroup</compoundname>
    <basecompoundref refid="classtranslotator_1_1SquareMatrix" prot="public" virt="non-virtual">translotator::SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</basecompoundref>
    <includes refid="SOGroup_8hpp" local="no">SOGroup.hpp</includes>
    <templateparamlist>
      <param>
        <type>size_t</type>
        <declname>N</declname>
        <defname>N</defname>
      </param>
      <param>
        <type>typename Type</type>
        <defval>TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtranslotator_1_1SOGroup_1a31009d697219e2d60293e9aab92bc358" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static ObjectType</type>
        <definition>constexpr static ObjectType translotator::SOGroup&lt; N, Type &gt;::OBJECT_TYPE</definition>
        <argsstring></argsstring>
        <name>OBJECT_TYPE</name>
        <initializer>= ObjectType::SO_GROUP</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="47" column="37" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="47" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a42313cf3bf6d69e6c11d0cfc6bbd775f" prot="private" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; translotator::SOGroup&lt; N, Type &gt;::Data_</definition>
        <argsstring>(size_t i, size_t j)</argsstring>
        <name>Data_</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="41" column="21" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a724e13b4f5e508ff5f397568ffb94410" prot="private" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const Type &amp;</type>
        <definition>const Type&amp; translotator::SOGroup&lt; N, Type &gt;::Data_</definition>
        <argsstring>(size_t i, size_t j) const</argsstring>
        <name>Data_</name>
        <param>
          <type>size_t</type>
          <declname>i</declname>
        </param>
        <param>
          <type>size_t</type>
          <declname>j</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="42" column="27" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="42" bodyend="42"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1aa0d04a335b3bea095f04068e4fb970b0" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::SOGroup&lt; N, Type &gt;::SOGroup</definition>
        <argsstring>(const SquareMatrix&lt; N, Type &gt; &amp;mat)</argsstring>
        <name>SOGroup</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref>&lt; N, Type &gt; &amp;</type>
          <declname>mat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="44" column="18" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="44" bodyend="44"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a7cd3f8191bcf000300572d90fcd5eece" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N_</declname>
            <defname>N_</defname>
            <defval>N</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>enable_if_t&lt;N_ == 2, <ref refid="structtranslotator_1_1integral__constant" kindref="compound">true_type</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>translotator::SOGroup&lt; N, Type &gt;::SOGroup</definition>
        <argsstring>(const Vector&lt; N, Type &gt; &amp;vec1, const Vector&lt; N, Type &gt; &amp;vec2, bool col=true)</argsstring>
        <name>SOGroup</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; N, Type &gt; &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; N, Type &gt; &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>col</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="55" column="9" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="55" bodyend="67"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1acb8343c774331327b9c7e5bb4bfb8b62" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N_</declname>
            <defname>N_</defname>
            <defval>N</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>enable_if_t&lt;N_ == 3, <ref refid="structtranslotator_1_1integral__constant" kindref="compound">true_type</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>translotator::SOGroup&lt; N, Type &gt;::SOGroup</definition>
        <argsstring>(const Vector&lt; N, Type &gt; &amp;vec1, const Vector&lt; N, Type &gt; &amp;vec2, const Vector&lt; N, Type &gt; &amp;vec3, bool col=true)</argsstring>
        <name>SOGroup</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; N, Type &gt; &amp;</type>
          <declname>vec1</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; N, Type &gt; &amp;</type>
          <declname>vec2</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; N, Type &gt; &amp;</type>
          <declname>vec3</declname>
        </param>
        <param>
          <type>bool</type>
          <declname>col</declname>
          <defval>true</defval>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="70" column="9" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="70" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1ac2c774e2cab00536fc1832a1e8533fb8" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N_</declname>
            <defname>N_</defname>
            <defval>N</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>enable_if_t&lt;N_ == 2, <ref refid="structtranslotator_1_1integral__constant" kindref="compound">true_type</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>translotator::SOGroup&lt; N, Type &gt;::SOGroup</definition>
        <argsstring>(const Type &amp;theta)</argsstring>
        <name>SOGroup</name>
        <param>
          <type>const Type &amp;</type>
          <declname>theta</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="88" column="18" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="88" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a4c094417f349bcb012a36dddc044a2ba" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>size_t</type>
            <declname>N_</declname>
            <defname>N_</defname>
            <defval>N</defval>
          </param>
          <param>
            <type>typename</type>
            <defval>enable_if_t&lt;N_ == 3, <ref refid="structtranslotator_1_1integral__constant" kindref="compound">true_type</ref>&gt;</defval>
          </param>
        </templateparamlist>
        <type></type>
        <definition>translotator::SOGroup&lt; N, Type &gt;::SOGroup</definition>
        <argsstring>(const Vector&lt; N, Type &gt; &amp;angleVector)</argsstring>
        <name>SOGroup</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; N, Type &gt; &amp;</type>
          <declname>angleVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="97" column="18" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="97" bodyend="107"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a8b5f5c33bd68187c7e40229beb041d52" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref>&lt; N, Type &gt;</type>
        <definition>SquareMatrix&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::operator+</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> + <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> =&gt; <ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para>operators <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtranslotator_1_1Matrix" kindref="compound">Matrix</ref> based object with same dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="118" column="29" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1aba9b3df2b4295bafa4d929d8b647b7b4" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref>&lt; N, Type &gt;</type>
        <definition>SquareMatrix&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::operator-</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> - <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> =&gt; <ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtranslotator_1_1Matrix" kindref="compound">Matrix</ref> based object with same dimension <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> - <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> =&gt; <ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="129" column="29" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="129" bodyend="133"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a94f0f16f75404d491258209b39d78fbb" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::SOGroup&lt; N, Type &gt;::operator*</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> * <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> =&gt; <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtranslotator_1_1Matrix" kindref="compound">Matrix</ref> based object with same dimension <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> * <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> =&gt; <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="140" column="21" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="140" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1ad4c1b838a0d4ffbcc45717eefbc25a99" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::SOGroup&lt; N, Type &gt;::operator*=</definition>
        <argsstring>(const SOGroup&lt; N, Type &gt; &amp;other)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> *= <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="160" column="21" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="160" bodyend="163"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a61a23dd8f152eb672149d733760532f9" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::SOGroup&lt; N, Type &gt;::operator/</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> / <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> =&gt; <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="classtranslotator_1_1Matrix" kindref="compound">Matrix</ref> based object with same dimension </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="175" column="21" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="175" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a7d4a8ef82d222c81468ad9b459d82c34" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::operator-</definition>
        <argsstring>() const</argsstring>
        <name>operator-</name>
        <briefdescription>
<para>-<ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="187" column="24" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="187" bodyend="190"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a32e84743cf7879df99b42afae6c64bb6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>Get the orthogonalized matrix. </para>
        </briefdescription>
        <detaileddescription>
<para>utils <simplesect kind="return"><para><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup&lt;N, Type&gt;</ref> </para>
</simplesect>
<simplesect kind="note"><para>This function uses <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref> &amp; UnitQuternion internally. Not a mathmatically correct way, but it works. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="201" column="24" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="201" bodyend="216"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a0da64e45cdb70376d3e657c256a4d049" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::SOGroup&lt; N, Type &gt;::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
<para>normalize this matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="218" column="21" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="218" bodyend="221"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a8ad0085e9345b1f855ed93231d6e5613" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::inversed</definition>
        <argsstring>() const</argsstring>
        <name>inversed</name>
        <briefdescription>
<para>inverse is same as transpose in <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="223" column="24" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="223" bodyend="226"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1adaf23451902987f1d0957bcd1a6ebdf0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::SOGroup&lt; N, Type &gt;::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
<para>inverse this matrix </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="228" column="21" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="228" bodyend="231"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a918af24e8c7a7a19b27fc84f4c5c85a7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::T</definition>
        <argsstring>() const</argsstring>
        <name>T</name>
        <briefdescription>
<para>transpose </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="233" column="24" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="233" bodyend="236"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1af5d9970b910dbf70c29b935cc5f0e54e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::pow</definition>
        <argsstring>(const Type &amp;t) const</argsstring>
        <name>pow</name>
        <param>
          <type>const Type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>power of <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>. Using Exponential &amp; Logarithm Map of Lie Group </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="238" column="24" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="238" bodyend="242"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a7a7e15aa938f21c1e6f7eac3b9e39b54" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::SOGroup&lt; N, Type &gt;::toUnitComplexNum</definition>
        <argsstring>() const</argsstring>
        <name>toUnitComplexNum</name>
        <briefdescription>
<para>convert to <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>. Using only z-axis </para>
        </briefdescription>
        <detaileddescription>
<para>casts </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="296" column="31" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="296" bodyend="300"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1a84ebc46021701c5df54d8a94469da536" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::SOGroup&lt; N, Type &gt;::toUnitQuaternion</definition>
        <argsstring>() const</argsstring>
        <name>toUnitQuaternion</name>
        <briefdescription>
<para>convert to <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="302" column="31" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="302" bodyend="353"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1ae59dede785be665de9a3c0282b066b7d" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>&lt; Type &gt;</type>
        <definition>AxisAngle&lt;Type&gt; translotator::SOGroup&lt; N, Type &gt;::toAxisAngle</definition>
        <argsstring>() const</argsstring>
        <name>toAxisAngle</name>
        <briefdescription>
<para>convert to <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="355" column="26" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="355" bodyend="368"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1ae748ff502affdea74f7b93fed81f54a2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EULER_ORDER</type>
            <declname>NewOrder</declname>
            <defname>NewOrder</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1EulerAngle" kindref="compound">EulerAngle</ref>&lt; Type, NewOrder &gt;</type>
        <definition>EulerAngle&lt;Type, NewOrder&gt; translotator::SOGroup&lt; N, Type &gt;::toEulerAngle</definition>
        <argsstring>() const</argsstring>
        <name>toEulerAngle</name>
        <briefdescription>
<para>Convert to Euler Angle. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NewOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>New Euler Order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
<para>In case of gimbal lock.</para>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="375" column="20" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="375" bodyend="417"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtranslotator_1_1SOGroup_1a596554368001b020b4c9971bbb83d390" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SquareMatrix" kindref="compound">SquareMatrix</ref>&lt; N, Type &gt;</type>
        <definition>SquareMatrix&lt;N, Type&gt; operator*</definition>
        <argsstring>(const Type &amp;lhs, const SOGroup &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Type &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Type * <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="164" column="36" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="164" bodyend="168"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1afc072e1aaa4dee4df8522c266199b5a1" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>static SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
<para>identity rotation element, which is identity matrix </para>
        </briefdescription>
        <detaileddescription>
<para>static functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="248" column="31" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="248" bodyend="252"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1SOGroup_1aa40b627f362467b91ebfee53921adb26" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>AXIS</type>
            <declname>Axis</declname>
            <defname>Axis</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; N, Type &gt;</type>
        <definition>static SOGroup&lt;N, Type&gt; translotator::SOGroup&lt; N, Type &gt;::axisRotation</definition>
        <argsstring>(const Type &amp;angle)</argsstring>
        <name>axisRotation</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>Create a rotation matrix around the axis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Axis</parametername>
</parameternamelist>
<parameterdescription>
<para>Axis to rotate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>angle</parametername>
</parameternamelist>
<parameterdescription>
<para>angle in radian </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/SOGroup.hpp" line="260" column="24" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="260" bodyend="290"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Special Orthogonal Group. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>N</parametername>
</parameternamelist>
<parameterdescription>
<para>dimension </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>data type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
Special Orthogonal Group is a group of rotation in N dimension. It is a group of orthogonal matrices with determinant 1. Subgroup of <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> is SO(2) and SO(3). Also <ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref> is a Lie Group. Exponential and Logarithm map can be defined. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="1">
        <label>translotator::SOGroup&lt; N, Type &gt;</label>
        <link refid="classtranslotator_1_1SOGroup"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; N, N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
      <node id="2">
        <label>translotator::SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</label>
        <link refid="classtranslotator_1_1SquareMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="1">
        <label>translotator::SOGroup&lt; N, Type &gt;</label>
        <link refid="classtranslotator_1_1SOGroup"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; N, N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
      <node id="2">
        <label>translotator::SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</label>
        <link refid="classtranslotator_1_1SquareMatrix"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/translotator/objects/SOGroup.hpp" line="36" column="5" bodyfile="include/translotator/objects/SOGroup.hpp" bodystart="37" bodyend="418"/>
    <listofallmembers>
      <member refid="classtranslotator_1_1SOGroup_1aa40b627f362467b91ebfee53921adb26" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>axisRotation</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a47fdb58bc41fa4fe1df99f8db9c8d825" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad383e1f78f6abd1c368945fa8b883bd0" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a240eaa7e3260d8154b98f843091d0dd7" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2ComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6ba81df86ee7444fd12085d45d220db1" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2ComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3b83a32e4e36acbf692f8d37652a592e" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2DualNumber</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a541c9f958dad45d5a0c58baf581aecb8" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2DualNumberRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab8fa863f2a015eb6ec81225c29a38169" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2DualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9e98013f1aaae87b9ddfc02989831cb7" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2DualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab2a12c8955040481906bc6921fcd3e49" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2Matrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac68b42d61fc1b37e775201939a2b974e" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2MatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5d6fc1d9f28cbddfcc3d84d2a1399546" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2Quaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a4337e1ab1f890f353ab7500e7a0b5d13" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2QuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a347f048dea85dfcb511b251bcc67a02f" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2SOGroup</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6c7b5cfbc31827a08626276f426b0c29" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2SOGroupRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a98881e399ea44c14116b8b3540cf9b59" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2SquareMatrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac71dc8fc81132db5fd1d371b04abb6d0" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2SquareMatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad3e6217331f7bee4dea61c1e5f3cb999" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5e58dda08116d760edd0f5e2b96c41f0" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2UnitComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a02ea9383482a196e452f8af815c295d9" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9cca30ec8afe0187659012b5c714fb19" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2UnitDualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2add8819f4e5dfcab056fec8c9756056" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aee2aae9874fdcfa4dca7a3a26d7a77ab" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2UnitQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb91e4a5737ace925a23c3f5e11e2532" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2Vector</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1afd185e6539db2e40864f309133a51a79" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>cast2VectorRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb925de5e627dc714aa27933730514e8" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>castContainer</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a060adc62a324b4377f863eba096ceb51" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac496fcf985c129b48da7b286c01a6863" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2cfeceed7f99058bf765180b19050523" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>castDataType</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab218ec09e5280731940c55d86e3655ea" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>col</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab6f1acc802eca0c13f5b1f0d7d8ad834" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>COLS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad0253ec3dcedd1f905f887b7c256213c" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>colSize</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a8a9385eb28706226a8bbaaa8b51923b5" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>copyTo</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a42313cf3bf6d69e6c11d0cfc6bbd775f" prot="private" virt="non-virtual"><scope>translotator::SOGroup</scope><name>Data_</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a724e13b4f5e508ff5f397568ffb94410" prot="private" virt="non-virtual"><scope>translotator::SOGroup</scope><name>Data_</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1fea766824100dbd2fa5a216a61afc46" prot="protected" virt="non-virtual"><scope>translotator::SOGroup</scope><name>data_</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a442deedb4154e8e74af4ba780b9674b1" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>DATATYPE</name></member>
      <member refid="classtranslotator_1_1SquareMatrix_1acb9fd9532d568133ed5fa149edd65b00" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>determinant</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a37eede5be5d720709f5f65ab5c7efb4a" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>eye</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a10472e837144233d66926ab55e3b4e92" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>fill</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a7fece031c63a9ce6edaa58b403770165" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>frobeniusNorm</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a646b7fb5c13368f5a854ee24b9766e1e" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>frobeniusNormSquared</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1dcb53f092bc48e65fac4dbc50be6033" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>getData</name></member>
      <member refid="classtranslotator_1_1SOGroup_1afc072e1aaa4dee4df8522c266199b5a1" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>identity</name></member>
      <member refid="classtranslotator_1_1SOGroup_1adaf23451902987f1d0957bcd1a6ebdf0" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>inverse</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a8ad0085e9345b1f855ed93231d6e5613" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>inversed</name></member>
      <member refid="classtranslotator_1_1SquareMatrix_1a12d301cd9c3f5fb40b4a04840e2ad5c1" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>inversed</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5c4b77c1ca1f9c1c56c2b54e156b3465" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>MATRIX_BASE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a251a9858487619a26be982aff3e6becf" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a92188d067565d2d2d15a1b351691b5ec" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5ab5684eb668e67fa7b56e3a1ace6d92" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2eb3cfe7fef246df96d6c6839312c5c7" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a01618e01c38cef87bfd460beac794cfd" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9780b7e145b7f6c84665643689a8991f" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>NaN</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a0da64e45cdb70376d3e657c256a4d049" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>normalize</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a32e84743cf7879df99b42afae6c64bb6" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>normalized</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a31009d697219e2d60293e9aab92bc358" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>OBJECT_TYPE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac3378d6df255caf33fe89e787a48a11b" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>ones</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9725e6c9ace3b3b45f56bc88599250ad" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa9c22193db8c13d3a9847b4f709054bd" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a94f0f16f75404d491258209b39d78fbb" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a596554368001b020b4c9971bbb83d390" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac1845354b3f57b857574469cfb9449c7" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a188d55faa3c3d76adf785fa6ad09a998" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1SOGroup_1ad4c1b838a0d4ffbcc45717eefbc25a99" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9fc66df0442accce22aaf51c2bb1ac85" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a8b5f5c33bd68187c7e40229beb041d52" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a79d0ad4e0873356325df2fcd103e5952" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a690755b7f6c6a688f70b890e7b0b899c" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator+=</name></member>
      <member refid="classtranslotator_1_1SOGroup_1aba9b3df2b4295bafa4d929d8b647b7b4" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a7d4a8ef82d222c81468ad9b459d82c34" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aec8347c0cb478c90c363f404f85f6597" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6a7643257fcf32adaff8c6034a3b4c03" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator-=</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a61a23dd8f152eb672149d733760532f9" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acca07931ca0268f437b3d2e8b7b303c5" prot="public" virt="non-virtual" ambiguityscope="SquareMatrix&lt; N, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::SOGroup</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3f896eec178e879273a17f8fc5a817cf" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3d259a0af89939865e167551b25d186d" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>operator=</name></member>
      <member refid="classtranslotator_1_1SOGroup_1af5d9970b910dbf70c29b935cc5f0e54e" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>pow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a767091c7e23c4dba39ea1275261ea1b3" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>print</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ae61f384241d4b12f54d816a97d090e7d" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>row</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1adc3ebb353990f9178c8c2b0ec20f4f07" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>ROWS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a24a5add5ff0fe1c1d465997c421e2088" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>rowSize</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab18c063f78f4d45797cb585e7bf2e32b" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a0df51ed7e80a011b5accfcd4b15e25c1" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a28a999eff129fd34e6655bd69803db0c" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6345caf6cd8951656f04a34aae2874c" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac22efb20214caa3f162197d8a683a7bc" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3c04f7dc6c48308fc8805b609fc67bd3" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1SOGroup_1aa0d04a335b3bea095f04068e4fb970b0" prot="private" virt="non-virtual"><scope>translotator::SOGroup</scope><name>SOGroup</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a7cd3f8191bcf000300572d90fcd5eece" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>SOGroup</name></member>
      <member refid="classtranslotator_1_1SOGroup_1acb8343c774331327b9c7e5bb4bfb8b62" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>SOGroup</name></member>
      <member refid="classtranslotator_1_1SOGroup_1ac2c774e2cab00536fc1832a1e8533fb8" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>SOGroup</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a4c094417f349bcb012a36dddc044a2ba" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>SOGroup</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aeb991a10367bf7972b6b7e84a2a9a850" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>swapCols</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a750f1fefac69a66d47f053f202e95102" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>swapRows</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a918af24e8c7a7a19b27fc84f4c5c85a7" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>T</name></member>
      <member refid="classtranslotator_1_1SOGroup_1ae59dede785be665de9a3c0282b066b7d" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>toAxisAngle</name></member>
      <member refid="classtranslotator_1_1SOGroup_1ae748ff502affdea74f7b93fed81f54a2" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>toEulerAngle</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a52ed10a72a7cae25898f2bcdf68380fb" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>toScalar</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a7a7e15aa938f21c1e6f7eac3b9e39b54" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>toUnitComplexNum</name></member>
      <member refid="classtranslotator_1_1SOGroup_1a84ebc46021701c5df54d8a94469da536" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>toUnitQuaternion</name></member>
      <member refid="classtranslotator_1_1SquareMatrix_1ac95153e093aa21c9d1d214c309d47478" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>trace</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6df03c2dfc985ea79ebb0d9b0787cae" prot="public" virt="non-virtual"><scope>translotator::SOGroup</scope><name>zeros</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
