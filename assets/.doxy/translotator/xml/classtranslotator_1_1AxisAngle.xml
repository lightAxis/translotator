<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtranslotator_1_1AxisAngle" kind="class" language="C++" prot="public">
    <compoundname>translotator::AxisAngle</compoundname>
    <includes refid="AxisAngle_8hpp" local="no">AxisAngle.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
        <defval>TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="private-attrib">
      <memberdef kind="variable" id="classtranslotator_1_1AxisAngle_1a03df5587a7818479ba4582d136a9ffe0" prot="private" static="no" mutable="no">
        <type>Type</type>
        <definition>Type translotator::AxisAngle&lt; Type &gt;::angle_</definition>
        <argsstring></argsstring>
        <name>angle_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="37" column="14" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="classtranslotator_1_1AxisAngle_1ad54f54efda1f43bf95e80baee41183d1" prot="private" static="no" mutable="no">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt;</type>
        <definition>Vector&lt;3, Type&gt; translotator::AxisAngle&lt; Type &gt;::axis_</definition>
        <argsstring></argsstring>
        <name>axis_</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="38" column="16" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="38" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtranslotator_1_1AxisAngle_1af589eeda44995e4812bdcbb23113deee" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static ObjectType</type>
        <definition>constexpr static ObjectType translotator::AxisAngle&lt; Type &gt;::OBJECT_TYPE</definition>
        <argsstring></argsstring>
        <name>OBJECT_TYPE</name>
        <initializer>= ObjectType::AXIS_ANGLE</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="41" column="37" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="41" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1ac8b31f8f34a55c6e30536a67a45d9233" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::AxisAngle&lt; Type &gt;::AxisAngle</definition>
        <argsstring>(const Type &amp;angle, const Type &amp;x, const Type &amp;y, const Type &amp;z)</argsstring>
        <name>AxisAngle</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>x</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>y</declname>
        </param>
        <param>
          <type>const Type &amp;</type>
          <declname>z</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Constructors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="46" column="16" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="46" bodyend="46"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1ae36beed70c8d0029073e564f1e1f6c7a" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::AxisAngle&lt; Type &gt;::AxisAngle</definition>
        <argsstring>(const Type &amp;angle, const Vector&lt; 3, Type &gt; &amp;axis)</argsstring>
        <name>AxisAngle</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>axis</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="47" column="25" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="47" bodyend="47"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a65089574a0b7d658b3c185ab72d153b0" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::AxisAngle&lt; Type &gt;::AxisAngle</definition>
        <argsstring>(const Type &amp;angle)</argsstring>
        <name>AxisAngle</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="48" column="25" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1aed78afdf7539a5fa0282b620097d6362" prot="public" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::AxisAngle&lt; Type &gt;::AxisAngle</definition>
        <argsstring>(const Vector&lt; 3, Type &gt; &amp;angleVector)</argsstring>
        <name>AxisAngle</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>angleVector</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="49" column="25" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="49" bodyend="62"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1afc4231c9bcaff02e09615a66236574d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>Type translotator::AxisAngle&lt; Type &gt;::angle</definition>
        <argsstring>() const</argsstring>
        <name>angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>accessors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="77" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="77" bodyend="77"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1ab7d32091c86871f8c7e4c71b9ce475e8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; translotator::AxisAngle&lt; Type &gt;::angle</definition>
        <argsstring>()</argsstring>
        <name>angle</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="78" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1ab238989b5b655234b91ecb2ac19d2bb1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
        <definition>const Vector&lt;3, Type&gt;&amp; translotator::AxisAngle&lt; Type &gt;::axis</definition>
        <argsstring>() const</argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="79" column="29" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="79" bodyend="79"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1aeb8275f97f1a067f77118d08fadbf0ed" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
        <definition>Vector&lt;3, Type&gt;&amp; translotator::AxisAngle&lt; Type &gt;::axis</definition>
        <argsstring>()</argsstring>
        <name>axis</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="80" column="23" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="80" bodyend="80"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a5101403ae0d2e96751b034eb9ec3e4d1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>Type translotator::AxisAngle&lt; Type &gt;::x</definition>
        <argsstring>() const</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="81" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="81" bodyend="81"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a5eceb6618aee80f01c7cd73ab2b28f13" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>Type translotator::AxisAngle&lt; Type &gt;::y</definition>
        <argsstring>() const</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="82" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="82" bodyend="82"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1adda966beb0d509ad4101134748b85c32" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type>Type</type>
        <definition>Type translotator::AxisAngle&lt; Type &gt;::z</definition>
        <argsstring>() const</argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="83" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="83" bodyend="83"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1ae336735b2f9a0abede291b55635e0d96" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; translotator::AxisAngle&lt; Type &gt;::x</definition>
        <argsstring>()</argsstring>
        <name>x</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="84" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="84" bodyend="84"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a874d9156ecb90d6839c5be059b7ba79f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; translotator::AxisAngle&lt; Type &gt;::y</definition>
        <argsstring>()</argsstring>
        <name>y</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="85" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a6925026227e11e5e33940d18d71b9fa5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>Type &amp;</type>
        <definition>Type&amp; translotator::AxisAngle&lt; Type &gt;::z</definition>
        <argsstring>()</argsstring>
        <name>z</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="86" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="86" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1adeddc42339719a6b1e2d8cdce097741a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::AxisAngle&lt; Type &gt;::axisNormalize</definition>
        <argsstring>()</argsstring>
        <name>axisNormalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Utils </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="92" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="92" bodyend="92"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a8ddb2826948f7c795544cb9708c33208" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref></type>
        <definition>AxisAngle translotator::AxisAngle&lt; Type &gt;::axisNormalized</definition>
        <argsstring>() const</argsstring>
        <name>axisNormalized</name>
        <briefdescription>
<para>normalize the axis inside </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="94" column="26" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="94" bodyend="94"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a78658b8cb259e8d3cca64f889ae0ef66" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::AxisAngle&lt; Type &gt;::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
<para>return a new <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> with normalized axis </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="96" column="21" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="96" bodyend="96"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a9eec4d829f5b453a7d661dc09018d1e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref></type>
        <definition>AxisAngle translotator::AxisAngle&lt; Type &gt;::inversed</definition>
        <argsstring>() const</argsstring>
        <name>inversed</name>
        <briefdescription>
<para>invert the angle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="98" column="26" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="98" bodyend="98"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a49c0169529a93d22c14b56bfd5592972" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt;</type>
        <definition>Vector&lt;3, Type&gt; translotator::AxisAngle&lt; Type &gt;::rotateVector3D</definition>
        <argsstring>(const Vector&lt; 3, Type &gt; &amp;v) const</argsstring>
        <name>rotateVector3D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>return a new <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> with inverted angle </para>
        </briefdescription>
        <detaileddescription>
<para>rotate a 3D vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="100" column="23" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="100" bodyend="103"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a4ab2d051cbb038a74033672805835aa1" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt;</type>
        <definition>Vector&lt;2, Type&gt; translotator::AxisAngle&lt; Type &gt;::rotateVector2D</definition>
        <argsstring>(const Vector&lt; 2, Type &gt; &amp;v) const</argsstring>
        <name>rotateVector2D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>rotate a 2D vector. Using only the z-axis of the <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="104" column="23" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="104" bodyend="110"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a44a8d8cc8698e5e1a9b1aab8cc597f6f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>AXIS</type>
            <declname>Axis</declname>
            <defname>Axis</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>&lt; Type &gt;</type>
        <definition>AxisAngle&lt;Type&gt; translotator::AxisAngle&lt; Type &gt;::axisRotation</definition>
        <argsstring>(const Type &amp;angle) const</argsstring>
        <name>axisRotation</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>return a new <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> with the unit axis and a angle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="112" column="26" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="112" bodyend="122"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a9deb8bc2fc9e01d5e3c634ff37589d46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::AxisAngle&lt; Type &gt;::toUnitQuaternion</definition>
        <argsstring>() const</argsstring>
        <name>toUnitQuaternion</name>
        <briefdescription>
<para>convert to <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref> </para>
        </briefdescription>
        <detaileddescription>
<para>Casting </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="128" column="31" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="128" bodyend="135"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a570fd1bcee3f8e300d88b829ba3e1001" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>&lt; Type &gt;</type>
        <definition>UnitComplexNum&lt;Type&gt; translotator::AxisAngle&lt; Type &gt;::toUnitComplexNum</definition>
        <argsstring>() const</argsstring>
        <name>toUnitComplexNum</name>
        <briefdescription>
<para>convert to <ref refid="classtranslotator_1_1UnitComplexNum" kindref="compound">UnitComplexNum</ref>. Using only z-axis of the <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="136" column="31" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="136" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a5f5c8964f977414092de791c4f9ccea6" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; 3, Type &gt;</type>
        <definition>SOGroup&lt;3, Type&gt; translotator::AxisAngle&lt; Type &gt;::toRotMatrix3D</definition>
        <argsstring>() const</argsstring>
        <name>toRotMatrix3D</name>
        <briefdescription>
<para>convert to SOGroup&lt;3, Type&gt; </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="140" column="24" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="140" bodyend="143"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a78759c16cb512c35cb43db701e05c36a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; 2, Type &gt;</type>
        <definition>SOGroup&lt;2, Type&gt; translotator::AxisAngle&lt; Type &gt;::toRotMatrix2D</definition>
        <argsstring>() const</argsstring>
        <name>toRotMatrix2D</name>
        <briefdescription>
<para>convert to SOGroup&lt;2, Type&gt;. Using only the z-axis of the <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="144" column="24" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="144" bodyend="150"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a084a4f15222e021bccf2a8a43244824f" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt;</type>
        <definition>Vector&lt;3, Type&gt; translotator::AxisAngle&lt; Type &gt;::toAngleVector</definition>
        <argsstring>() const</argsstring>
        <name>toAngleVector</name>
        <briefdescription>
<para>convert to a Vector&lt;3, Type&gt; with the angle as the norm </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="151" column="23" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="151" bodyend="154"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1afd607a3f466f5e16715b4fb275bc5903" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EULER_ORDER</type>
            <declname>AxisOrder</declname>
            <defname>AxisOrder</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1EulerAngle" kindref="compound">EulerAngle</ref>&lt; Type, AxisOrder &gt;</type>
        <definition>EulerAngle&lt;Type, AxisOrder&gt; translotator::AxisAngle&lt; Type &gt;::toEulerAngle2D</definition>
        <argsstring>() const</argsstring>
        <name>toEulerAngle2D</name>
        <briefdescription>
<para>convert to EulerAngle2D. Using only the z-axis of the <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="156" column="27" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="156" bodyend="159"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a079077fa64aaaeb3d55d3978101cf547" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EULER_ORDER</type>
            <declname>AxisOrder</declname>
            <defname>AxisOrder</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1EulerAngle" kindref="compound">EulerAngle</ref>&lt; Type, AxisOrder &gt;</type>
        <definition>EulerAngle&lt;Type, AxisOrder&gt; translotator::AxisAngle&lt; Type &gt;::toEulerAngle3D</definition>
        <argsstring>() const</argsstring>
        <name>toEulerAngle3D</name>
        <briefdescription>
<para>convert to EulerAngle3D </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="161" column="27" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="161" bodyend="164"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1ae51a008b77d93f90691dda963b5a6145" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename NewType</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>&lt; NewType &gt;</type>
        <definition>AxisAngle&lt;NewType&gt; translotator::AxisAngle&lt; Type &gt;::castDataType</definition>
        <argsstring>() const</argsstring>
        <name>castDataType</name>
        <briefdescription>
<para>convert to a new <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> with a different data type </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="166" column="26" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="166" bodyend="170"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtranslotator_1_1AxisAngle_1a6130fe7ec8c993d0700103594e0993ad" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>&lt; Type &gt;</type>
        <definition>static AxisAngle&lt;Type&gt; translotator::AxisAngle&lt; Type &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
<para>Returns the identity of <ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>, which is a rotation of 0 degrees around the x-axis. </para>
        </briefdescription>
        <detaileddescription>
<para>static functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/AxisAngle.hpp" line="71" column="33" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="71" bodyend="71"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Represents a rotation in 3D space by an angle around an axis. </para>
    </briefdescription>
    <detaileddescription>
<para><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref> <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>floating point type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
The axis is a unit vector. The angle is in radians. The rotation is counter-clockwise when looking from the positive side of the axis. </para>
    </detaileddescription>
    <location file="include/translotator/objects/AxisAngle.hpp" line="34" column="5" bodyfile="include/translotator/objects/AxisAngle.hpp" bodystart="35" bodyend="173"/>
    <listofallmembers>
      <member refid="classtranslotator_1_1AxisAngle_1afc4231c9bcaff02e09615a66236574d1" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>angle</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ab7d32091c86871f8c7e4c71b9ce475e8" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>angle</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a03df5587a7818479ba4582d136a9ffe0" prot="private" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>angle_</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ab238989b5b655234b91ecb2ac19d2bb1" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>axis</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1aeb8275f97f1a067f77118d08fadbf0ed" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>axis</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ad54f54efda1f43bf95e80baee41183d1" prot="private" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>axis_</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ac8b31f8f34a55c6e30536a67a45d9233" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>AxisAngle</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ae36beed70c8d0029073e564f1e1f6c7a" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>AxisAngle</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a65089574a0b7d658b3c185ab72d153b0" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>AxisAngle</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1aed78afdf7539a5fa0282b620097d6362" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>AxisAngle</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1adeddc42339719a6b1e2d8cdce097741a" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>axisNormalize</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a8ddb2826948f7c795544cb9708c33208" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>axisNormalized</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a44a8d8cc8698e5e1a9b1aab8cc597f6f" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>axisRotation</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ae51a008b77d93f90691dda963b5a6145" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>castDataType</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a6130fe7ec8c993d0700103594e0993ad" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>identity</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a78658b8cb259e8d3cca64f889ae0ef66" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>inverse</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a9eec4d829f5b453a7d661dc09018d1e2" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>inversed</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1af589eeda44995e4812bdcbb23113deee" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>OBJECT_TYPE</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a4ab2d051cbb038a74033672805835aa1" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>rotateVector2D</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a49c0169529a93d22c14b56bfd5592972" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>rotateVector3D</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a084a4f15222e021bccf2a8a43244824f" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toAngleVector</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1afd607a3f466f5e16715b4fb275bc5903" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toEulerAngle2D</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a079077fa64aaaeb3d55d3978101cf547" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toEulerAngle3D</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a78759c16cb512c35cb43db701e05c36a" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toRotMatrix2D</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a5f5c8964f977414092de791c4f9ccea6" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toRotMatrix3D</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a570fd1bcee3f8e300d88b829ba3e1001" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toUnitComplexNum</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a9deb8bc2fc9e01d5e3c634ff37589d46" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>toUnitQuaternion</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a5101403ae0d2e96751b034eb9ec3e4d1" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>x</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1ae336735b2f9a0abede291b55635e0d96" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>x</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a5eceb6618aee80f01c7cd73ab2b28f13" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>y</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a874d9156ecb90d6839c5be059b7ba79f" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>y</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1adda966beb0d509ad4101134748b85c32" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>z</name></member>
      <member refid="classtranslotator_1_1AxisAngle_1a6925026227e11e5e33940d18d71b9fa5" prot="public" virt="non-virtual"><scope>translotator::AxisAngle</scope><name>z</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
