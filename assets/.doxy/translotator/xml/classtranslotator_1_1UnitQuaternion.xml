<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.1" xml:lang="en-US">
  <compounddef id="classtranslotator_1_1UnitQuaternion" kind="class" language="C++" prot="public">
    <compoundname>translotator::UnitQuaternion</compoundname>
    <basecompoundref refid="classtranslotator_1_1Quaternion" prot="public" virt="non-virtual">translotator::Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</basecompoundref>
    <includes refid="UnitQuaternion_8hpp" local="no">UnitQuaternion.hpp</includes>
    <templateparamlist>
      <param>
        <type>typename Type</type>
        <defval>TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE</defval>
      </param>
    </templateparamlist>
      <sectiondef kind="public-static-attrib">
      <memberdef kind="variable" id="classtranslotator_1_1UnitQuaternion_1a2f6acd153da011e1f8b872965f67dfac" prot="public" static="yes" constexpr="yes" mutable="no">
        <type>constexpr static ObjectType</type>
        <definition>constexpr static ObjectType translotator::UnitQuaternion&lt; Type &gt;::OBJECT_TYPE</definition>
        <argsstring></argsstring>
        <name>OBJECT_TYPE</name>
        <initializer>= ObjectType::UNIT_QUATERNION</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="40" column="37" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="40" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="private-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a5bd4c159b45d566d6577cda1a12b70be" prot="private" static="no" const="no" explicit="yes" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitQuaternion&lt; Type &gt;::UnitQuaternion</definition>
        <argsstring>(const Quaternion&lt; Type &gt; &amp;quat)</argsstring>
        <name>UnitQuaternion</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>quat</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="37" column="18" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="37" bodyend="37"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a0da78d4434ee351568fb18613ee5419a" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitQuaternion&lt; Type &gt;::UnitQuaternion</definition>
        <argsstring>()</argsstring>
        <name>UnitQuaternion</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructors </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="46" column="16" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="46" bodyend="49"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a7e5cabeb489b3908c9a40d447a67bc54" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type></type>
        <definition>translotator::UnitQuaternion&lt; Type &gt;::UnitQuaternion</definition>
        <argsstring>(const Vector&lt; 3, Type &gt; &amp;angleVec)</argsstring>
        <name>UnitQuaternion</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>angleVec</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="50" column="16" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="50" bodyend="50"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1abcbc19616e8e9fe05b45a489df0deb58" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::operator+</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator+</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator+ operator </para>
        </briefdescription>
        <detaileddescription>
<para>operators <parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="71" column="27" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="71" bodyend="75"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a774f9fbe03aaf448cde60937ac56ed46" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::operator-</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator-</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator- operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="82" column="27" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="82" bodyend="86"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1aca54a0cad20d7d547fcd25de127f278e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitQuaternion&lt; Type &gt;::operator*</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator*</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator* operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This operator is used to multiply two quaternions. <simplesect kind="note"><para>Unit * Unit = Unit, </para>
</simplesect>
<simplesect kind="note"><para>Unit * <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref> = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>, </para>
</simplesect>
<simplesect kind="note"><para>Unit * Type = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>, </para>
</simplesect>
<simplesect kind="note"><para>else, follows the matrix multiplication rule </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="98" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="98" bodyend="117"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1ae28821196e20c9faaddacfd7c387aba1" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitQuaternion&lt; Type &gt;::operator*=</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>operator*=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Unit * Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="128" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="128" bodyend="131"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a1e492a1817c6795c2419068a1492e02c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::quatNumMul</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>quatNumMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="137" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="137" bodyend="137"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a7f6f5a66728103d670714f6f5603cf40" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::quatNumMul</definition>
        <argsstring>(const Quaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>quatNumMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>alias for operator* for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="139" column="27" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="139" bodyend="139"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a6e5fa4bda2a856eb125f5f360b138787" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitQuaternion&lt; Type &gt;::quatNumMulEq</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>quatNumMulEq</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="146" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="146" bodyend="146"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1ae9b3b7f712be8549ed5c684f2a9ea140" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>typename OtherContainer</type>
          </param>
        </templateparamlist>
        <type>auto</type>
        <definition>auto translotator::UnitQuaternion&lt; Type &gt;::operator/</definition>
        <argsstring>(const OtherContainer &amp;other) const</argsstring>
        <name>operator/</name>
        <param>
          <type>const OtherContainer &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>operator/ operator </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>OtherContainer</parametername>
</parameternamelist>
<parameterdescription>
<para>other container matrix-base type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
This operator is used to divide two quaternions. <simplesect kind="note"><para>Unit / Unit = Unit, </para>
</simplesect>
<simplesect kind="note"><para>Unit / <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref> = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>, </para>
</simplesect>
<simplesect kind="note"><para>Unit / Type = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>, </para>
</simplesect>
<simplesect kind="note"><para>else, follows the matrix multiplication rule </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="163" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="163" bodyend="185"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a4da146bec6d5a11dcb5ea9029b379536" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitQuaternion&lt; Type &gt;::operator/=</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>operator/=</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>Unit / Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="191" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="191" bodyend="194"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a6270b6be113f46f66a21eedd16bc932a" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::quatNumDiv</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>quatNumDiv</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="200" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="200" bodyend="200"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1ad4cf9ee1a7710a4990a60789ad073f95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::quatNumDiv</definition>
        <argsstring>(const Quaternion&lt; Type &gt; &amp;other) const</argsstring>
        <name>quatNumDiv</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>alias for operator/ for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="202" column="27" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="202" bodyend="202"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a6ce87b7874b902c017fed521e9becae5" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitQuaternion&lt; Type &gt;::quatNumDivEq</definition>
        <argsstring>(const UnitQuaternion&lt; Type &gt; &amp;other)</argsstring>
        <name>quatNumDivEq</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>other</declname>
        </param>
        <briefdescription>
<para>alias for operator/ for readability </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="204" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="204" bodyend="204"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1af1de15aa700b7b41ac40b64c9e1fab9b" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::normalized</definition>
        <argsstring>() const</argsstring>
        <name>normalized</name>
        <briefdescription>
<para>return normalized unit quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>utils </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="216" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="216" bodyend="219"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a5c9b2d69441edd0c885151aa41936fdc" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::conjugated</definition>
        <argsstring>() const</argsstring>
        <name>conjugated</name>
        <briefdescription>
<para>return conjugated unit quaternion. Primary conjugated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="220" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="220" bodyend="223"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a415bab1b049887cc8606da920b49488c" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::inversed</definition>
        <argsstring>() const</argsstring>
        <name>inversed</name>
        <briefdescription>
<para>return inversed unit quaternion. It is same as conjugated. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="224" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="224" bodyend="227"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a85d1e4afe37c3e5d0e8995050e84f0e7" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitQuaternion&lt; Type &gt;::inverse</definition>
        <argsstring>()</argsstring>
        <name>inverse</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="228" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="228" bodyend="228"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1ac37d8b14765bae775f0a42fa7c4e9f95" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt;</type>
        <definition>Vector&lt;3, Type&gt; translotator::UnitQuaternion&lt; Type &gt;::rotateVector3D</definition>
        <argsstring>(const Vector&lt; 3, Type &gt; &amp;v) const</argsstring>
        <name>rotateVector3D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 3, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>inverse this unit quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>rotate 3D vector </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="230" column="23" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="230" bodyend="235"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1abeb4021155639ef7ceea9ffdf8f543e2" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt;</type>
        <definition>Vector&lt;2, Type&gt; translotator::UnitQuaternion&lt; Type &gt;::rotateVector2D</definition>
        <argsstring>(const Vector&lt; 2, Type &gt; &amp;v) const</argsstring>
        <name>rotateVector2D</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Vector" kindref="compound">Vector</ref>&lt; 2, Type &gt; &amp;</type>
          <declname>v</declname>
        </param>
        <briefdescription>
<para>rotate 2D vector. Using only w, z component. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="236" column="23" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="236" bodyend="243"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a459b7b422adc2ea1b438005839dfbe60" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::canonicalized</definition>
        <argsstring>() const</argsstring>
        <name>canonicalized</name>
        <briefdescription>
<para>return canonicalized unit quaternion. if w &lt; 0, negate all components. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="244" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="244" bodyend="247"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a704b2c0caa6a8ed8b80bfd6e1aff872f" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void translotator::UnitQuaternion&lt; Type &gt;::canonicalize</definition>
        <argsstring>()</argsstring>
        <name>canonicalize</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="248" column="21" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="248" bodyend="248"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a6f31465bf729fa24ee218f899bcc4b63" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::pow</definition>
        <argsstring>(const Type &amp;t) const</argsstring>
        <name>pow</name>
        <param>
          <type>const Type &amp;</type>
          <declname>t</declname>
        </param>
        <briefdescription>
<para>canonicalize this unit quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>return t-th power of this unit quaternion. Using Lie operation Exp, Log </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="250" column="31" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="250" bodyend="254"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1aa6126bffcd7fb2835d975dac8ddafb23" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; 2, Type &gt;</type>
        <definition>SOGroup&lt;2, Type&gt; translotator::UnitQuaternion&lt; Type &gt;::toRotMatrix2D</definition>
        <argsstring>() const</argsstring>
        <name>toRotMatrix2D</name>
        <briefdescription>
<para>convert to SO(2) group, Using only z axis rotation </para>
        </briefdescription>
        <detaileddescription>
<para>casting </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="289" column="24" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="289" bodyend="296"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1ae680e84039ce77df64c4084cfa719d88" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1SOGroup" kindref="compound">SOGroup</ref>&lt; 3, Type &gt;</type>
        <definition>SOGroup&lt;3, Type&gt; translotator::UnitQuaternion&lt; Type &gt;::toRotMatrix3D</definition>
        <argsstring>() const</argsstring>
        <name>toRotMatrix3D</name>
        <briefdescription>
<para>convert to SO(3) group </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="297" column="24" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="297" bodyend="311"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a9d5a80b401f55abefe4533cb96fe5eb7" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1AxisAngle" kindref="compound">AxisAngle</ref>&lt; Type &gt;</type>
        <definition>AxisAngle&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::toAxisAngle</definition>
        <argsstring>() const</argsstring>
        <name>toAxisAngle</name>
        <briefdescription>
<para>convert to axis angle </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="312" column="26" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="312" bodyend="321"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a765a8706b1acdc36085cb597e6e31c7e" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EULER_ORDER</type>
            <declname>AxisOrder</declname>
            <defname>AxisOrder</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1EulerAngle" kindref="compound">EulerAngle</ref>&lt; Type, AxisOrder &gt;</type>
        <definition>EulerAngle&lt;Type, AxisOrder&gt; translotator::UnitQuaternion&lt; Type &gt;::toEulerAngle2D</definition>
        <argsstring>() const</argsstring>
        <name>toEulerAngle2D</name>
        <briefdescription>
<para>convert to euler angle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>AxisOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>euler angle order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="note"><para>Using only z axis rotation </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="329" column="27" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="329" bodyend="332"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a6c9e0a6ffb6dd2b151ecf9704c591cda" prot="public" static="no" const="yes" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>EULER_ORDER</type>
            <declname>NewOrder</declname>
            <defname>NewOrder</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1EulerAngle" kindref="compound">EulerAngle</ref>&lt; Type, NewOrder &gt;</type>
        <definition>EulerAngle&lt;Type, NewOrder&gt; translotator::UnitQuaternion&lt; Type &gt;::toEulerAngle3D</definition>
        <argsstring>() const</argsstring>
        <name>toEulerAngle3D</name>
        <briefdescription>
<para>convert to euler angle </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>NewOrder</parametername>
</parameternamelist>
<parameterdescription>
<para>euler angle order </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="339" column="27" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="339" bodyend="342"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="friend">
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1a0e7a53514e8738cb2ec1de0d6420c182" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; operator*</definition>
        <argsstring>(const Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref> * Unit = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="118" column="34" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="118" bodyend="122"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1aa9290b0a8c9ad519aebc629269cab2cf" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; operator*</definition>
        <argsstring>(const Type &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*</name>
        <param>
          <type>const Type &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Type * Unit = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="123" column="34" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="123" bodyend="127"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1afb13c8424eba3fa013b52b66d5f07222" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator*=</definition>
        <argsstring>(Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator*=</name>
        <param>
          <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>Unit * Unit = Unit. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="132" column="28" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="132" bodyend="136"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1a6eb74a1e80fc88760d40d3915d2b38a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; quatNumMul</definition>
        <argsstring>(const Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>quatNumMul</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator* for readability </para>
        </briefdescription>
        <detaileddescription>
<para>alias for operator* for readability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="141" column="34" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="141" bodyend="145"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1aaf9abd7325322a162ede75bcd06f0706" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quatNumMulEq</definition>
        <argsstring>(Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>quatNumMulEq</name>
        <param>
          <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator*= for readability </para>
        </briefdescription>
        <detaileddescription>
<para>alias for operator*= for readability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="148" column="28" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="148" bodyend="151"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1aff7c9cf2d04ee9b7c691f860b76bc9d9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt;</type>
        <definition>Quaternion&lt;Type&gt; operator/</definition>
        <argsstring>(const Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator/</name>
        <param>
          <type>const <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref> / Unit = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="186" column="34" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="186" bodyend="190"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1a1b78951425334bf12978d95eedfcbc9b" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void operator/=</definition>
        <argsstring>(Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>operator/=</name>
        <param>
          <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref> / Unit = <ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>. </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="195" column="28" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="195" bodyend="199"/>
      </memberdef>
      <memberdef kind="friend" id="classtranslotator_1_1UnitQuaternion_1ae9921d39a4191e02d56fad439abc1127" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void quatNumDivEq</definition>
        <argsstring>(Quaternion&lt; Type &gt; &amp;lhs, const UnitQuaternion&lt; Type &gt; &amp;rhs)</argsstring>
        <name>quatNumDivEq</name>
        <param>
          <type><ref refid="classtranslotator_1_1Quaternion" kindref="compound">Quaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>lhs</declname>
        </param>
        <param>
          <type>const <ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt; &amp;</type>
          <declname>rhs</declname>
        </param>
        <briefdescription>
<para>alias for operator/= for readability </para>
        </briefdescription>
        <detaileddescription>
<para>alias for operator/= for readability </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="206" column="28" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="206" bodyend="210"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a0a7ebc5f96b74eea2838405d8103d037" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>static UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::identity</definition>
        <argsstring>()</argsstring>
        <name>identity</name>
        <briefdescription>
<para>identity unit quaternion </para>
        </briefdescription>
        <detaileddescription>
<para>static functions </para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="263" column="38" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="263" bodyend="263"/>
      </memberdef>
      <memberdef kind="function" id="classtranslotator_1_1UnitQuaternion_1a1988497479e8e4759a34acd889ac6a09" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <templateparamlist>
          <param>
            <type>AXIS</type>
            <declname>Axis</declname>
            <defname>Axis</defname>
          </param>
        </templateparamlist>
        <type><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref>&lt; Type &gt;</type>
        <definition>static UnitQuaternion&lt;Type&gt; translotator::UnitQuaternion&lt; Type &gt;::axisRotation</definition>
        <argsstring>(const Type &amp;angle)</argsstring>
        <name>axisRotation</name>
        <param>
          <type>const Type &amp;</type>
          <declname>angle</declname>
        </param>
        <briefdescription>
<para>axis rotation unit quaternion </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Axis</parametername>
</parameternamelist>
<parameterdescription>
<para>axis to rotate </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="include/translotator/objects/UnitQuaternion.hpp" line="270" column="38" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="270" bodyend="283"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para><ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref> class. </para>
    </briefdescription>
    <detaileddescription>
<para><parameterlist kind="templateparam"><parameteritem>
<parameternamelist>
<parametername>Type</parametername>
</parameternamelist>
<parameterdescription>
<para>floating point type</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<ref refid="classtranslotator_1_1UnitQuaternion" kindref="compound">UnitQuaternion</ref> class is a class that represents a unit quaternion. A unit quaternion is a quaternion that has a length of 1. </para>
    </detaileddescription>
    <inheritancegraph>
      <node id="2">
        <label>translotator::Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</label>
        <link refid="classtranslotator_1_1Quaternion"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
      <node id="1">
        <label>translotator::UnitQuaternion&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1UnitQuaternion"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </inheritancegraph>
    <collaborationgraph>
      <node id="2">
        <label>translotator::Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;</label>
        <link refid="classtranslotator_1_1Quaternion"/>
        <childnode refid="3" relation="public-inheritance">
        </childnode>
      </node>
      <node id="3">
        <label>translotator::MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;</label>
        <link refid="classtranslotator_1_1MatrixBase"/>
      </node>
      <node id="1">
        <label>translotator::UnitQuaternion&lt; Type &gt;</label>
        <link refid="classtranslotator_1_1UnitQuaternion"/>
        <childnode refid="2" relation="public-inheritance">
        </childnode>
      </node>
    </collaborationgraph>
    <location file="include/translotator/objects/UnitQuaternion.hpp" line="34" column="5" bodyfile="include/translotator/objects/UnitQuaternion.hpp" bodystart="35" bodyend="345"/>
    <listofallmembers>
      <member refid="classtranslotator_1_1UnitQuaternion_1a1988497479e8e4759a34acd889ac6a09" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>axisRotation</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a47fdb58bc41fa4fe1df99f8db9c8d825" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>block</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad383e1f78f6abd1c368945fa8b883bd0" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>block</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a704b2c0caa6a8ed8b80bfd6e1aff872f" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>canonicalize</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a459b7b422adc2ea1b438005839dfbe60" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>canonicalized</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a240eaa7e3260d8154b98f843091d0dd7" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2ComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6ba81df86ee7444fd12085d45d220db1" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2ComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3b83a32e4e36acbf692f8d37652a592e" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2DualNumber</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a541c9f958dad45d5a0c58baf581aecb8" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2DualNumberRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab8fa863f2a015eb6ec81225c29a38169" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2DualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9e98013f1aaae87b9ddfc02989831cb7" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2DualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab2a12c8955040481906bc6921fcd3e49" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2Matrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac68b42d61fc1b37e775201939a2b974e" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2MatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5d6fc1d9f28cbddfcc3d84d2a1399546" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2Quaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a4337e1ab1f890f353ab7500e7a0b5d13" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2QuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a347f048dea85dfcb511b251bcc67a02f" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2SOGroup</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6c7b5cfbc31827a08626276f426b0c29" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2SOGroupRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a98881e399ea44c14116b8b3540cf9b59" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2SquareMatrix</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac71dc8fc81132db5fd1d371b04abb6d0" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2SquareMatrixRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad3e6217331f7bee4dea61c1e5f3cb999" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2UnitComplexNum</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5e58dda08116d760edd0f5e2b96c41f0" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2UnitComplexNumRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a02ea9383482a196e452f8af815c295d9" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2UnitDualQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9cca30ec8afe0187659012b5c714fb19" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2UnitDualQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2add8819f4e5dfcab056fec8c9756056" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aee2aae9874fdcfa4dca7a3a26d7a77ab" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2UnitQuaternionRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb91e4a5737ace925a23c3f5e11e2532" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2Vector</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1afd185e6539db2e40864f309133a51a79" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>cast2VectorRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acb925de5e627dc714aa27933730514e8" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>castContainer</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a060adc62a324b4377f863eba096ceb51" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac496fcf985c129b48da7b286c01a6863" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>castContainerRef</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2cfeceed7f99058bf765180b19050523" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>castDataType</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab218ec09e5280731940c55d86e3655ea" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>col</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab6f1acc802eca0c13f5b1f0d7d8ad834" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>COLS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad0253ec3dcedd1f905f887b7c256213c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>colSize</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a818ac383164b27a3c77af11ecc0bc4d9" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>conjugate</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a5c9b2d69441edd0c885151aa41936fdc" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>conjugated</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a8a9385eb28706226a8bbaaa8b51923b5" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>copyTo</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1fea766824100dbd2fa5a216a61afc46" prot="protected" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>data_</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a442deedb4154e8e74af4ba780b9674b1" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>DATATYPE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a37eede5be5d720709f5f65ab5c7efb4a" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>eye</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a10472e837144233d66926ab55e3b4e92" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>fill</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a7fece031c63a9ce6edaa58b403770165" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>frobeniusNorm</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a646b7fb5c13368f5a854ee24b9766e1e" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>frobeniusNormSquared</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a1dcb53f092bc48e65fac4dbc50be6033" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>getData</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a0a7ebc5f96b74eea2838405d8103d037" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>identity</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a1e8f2dec06a95b2630cc1999fd4019ca" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Im</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a3ba561c11f11c125d397b35c28200b3c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Im</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a85d1e4afe37c3e5d0e8995050e84f0e7" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>inverse</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a415bab1b049887cc8606da920b49488c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>inversed</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5c4b77c1ca1f9c1c56c2b54e156b3465" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>MATRIX_BASE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a251a9858487619a26be982aff3e6becf" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a92188d067565d2d2d15a1b351691b5ec" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a5ab5684eb668e67fa7b56e3a1ace6d92" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a2eb3cfe7fef246df96d6c6839312c5c7" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a01618e01c38cef87bfd460beac794cfd" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>MatrixBase</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9780b7e145b7f6c84665643689a8991f" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>NaN</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a20c3cf18c979823c875f5ce6f5d10a0c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>norm</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a7a4bf99b8380ce8178b2756660f138de" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>normalize</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1af1de15aa700b7b41ac40b64c9e1fab9b" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>normalized</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a705289fc7babf391ae48827d164b9afe" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>normSquared</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a2f6acd153da011e1f8b872965f67dfac" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>OBJECT_TYPE</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac3378d6df255caf33fe89e787a48a11b" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>ones</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9725e6c9ace3b3b45f56bc88599250ad" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa9c22193db8c13d3a9847b4f709054bd" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator()</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1aca54a0cad20d7d547fcd25de127f278e" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a0e7a53514e8738cb2ec1de0d6420c182" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1aa9290b0a8c9ad519aebc629269cab2cf" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1Quaternion_1ab2087cbb2373a2273bc0c7fdc142cf2d" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac1845354b3f57b857574469cfb9449c7" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a188d55faa3c3d76adf785fa6ad09a998" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator*</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1ae28821196e20c9faaddacfd7c387aba1" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1afb13c8424eba3fa013b52b66d5f07222" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1Quaternion_1aba3fe1020cfca1775c9c90a11eb3b2e5" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a9fc66df0442accce22aaf51c2bb1ac85" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator*=</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1abcbc19616e8e9fe05b45a489df0deb58" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a79d0ad4e0873356325df2fcd103e5952" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator+</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a690755b7f6c6a688f70b890e7b0b899c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator+=</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a774f9fbe03aaf448cde60937ac56ed46" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aec8347c0cb478c90c363f404f85f6597" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a65a69ae6c21bd6b0fa864270b007802a" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator-</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a6a7643257fcf32adaff8c6034a3b4c03" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator-=</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1ae9b3b7f712be8549ed5c684f2a9ea140" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1aff7c9cf2d04ee9b7c691f860b76bc9d9" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a556990069f62dd5598c86429e0da43ec" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1acca07931ca0268f437b3d2e8b7b303c5" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator/</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a4da146bec6d5a11dcb5ea9029b379536" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a1b78951425334bf12978d95eedfcbc9b" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1Quaternion_1ad85191c02e1c467fa51a3343a3d20a4d" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3f896eec178e879273a17f8fc5a817cf" prot="public" virt="non-virtual" ambiguityscope="MatrixBase&lt; 4, 1, TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE, Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt; &gt;::"><scope>translotator::UnitQuaternion</scope><name>operator/=</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3d259a0af89939865e167551b25d186d" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator=</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a32456f67d54893a7223158de6377e887" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator[]</name></member>
      <member refid="classtranslotator_1_1Quaternion_1aeb023fb794b6929e3f672a5f0bf185a5" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>operator[]</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a6f31465bf729fa24ee218f899bcc4b63" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>pow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a767091c7e23c4dba39ea1275261ea1b3" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>print</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a7022d0351f15d7d03318f3aa9beae0f2" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Quaternion</name></member>
      <member refid="classtranslotator_1_1Quaternion_1ad59d8715414c25d6557231449928cd1a" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Quaternion</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a1d342fd57b4d6d13dfa5e6b4e28f6efc" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Quaternion</name></member>
      <member refid="classtranslotator_1_1Quaternion_1aeaa337692b923ccb07ef02ab3b19f0ec" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Quaternion</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a6270b6be113f46f66a21eedd16bc932a" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumDiv</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1ad4cf9ee1a7710a4990a60789ad073f95" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumDiv</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a27a87f4e538934023f5c97e37b548778" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>quatNumDiv</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a6ce87b7874b902c017fed521e9becae5" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumDivEq</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1ae9921d39a4191e02d56fad439abc1127" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumDivEq</name></member>
      <member refid="classtranslotator_1_1Quaternion_1acf7cacd92c45537d071f8ce6dca6b0aa" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>quatNumDivEq</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a1e492a1817c6795c2419068a1492e02c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumMul</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a7f6f5a66728103d670714f6f5603cf40" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumMul</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a6eb74a1e80fc88760d40d3915d2b38a3" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumMul</name></member>
      <member refid="classtranslotator_1_1Quaternion_1abd3f01b9316e5b2c9ad6cb73a559c03f" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>quatNumMul</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a6e5fa4bda2a856eb125f5f360b138787" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumMulEq</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1aaf9abd7325322a162ede75bcd06f0706" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>quatNumMulEq</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a7f087636ea676618aba830881aef33c6" prot="public" virt="non-virtual" ambiguityscope="Quaternion&lt; TRANSLOTATOR_DEFAULT_FLOATING_POINT_TYPE &gt;::"><scope>translotator::UnitQuaternion</scope><name>quatNumMulEq</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a989abc6c4c8a48e99bf350015799b0f2" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Re</name></member>
      <member refid="classtranslotator_1_1Quaternion_1ae8b89c0e9200a053c3f13643fb571fe3" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>Re</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1abeb4021155639ef7ceea9ffdf8f543e2" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>rotateVector2D</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1ac37d8b14765bae775f0a42fa7c4e9f95" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>rotateVector3D</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ae61f384241d4b12f54d816a97d090e7d" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>row</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1adc3ebb353990f9178c8c2b0ec20f4f07" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>ROWS</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a24a5add5ff0fe1c1d465997c421e2088" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>rowSize</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ab18c063f78f4d45797cb585e7bf2e32b" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a0df51ed7e80a011b5accfcd4b15e25c1" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>setBlock</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a28a999eff129fd34e6655bd69803db0c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6345caf6cd8951656f04a34aae2874c" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>setCol</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ac22efb20214caa3f162197d8a683a7bc" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a3c04f7dc6c48308fc8805b609fc67bd3" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>setRow</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aeb991a10367bf7972b6b7e84a2a9a850" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>swapCols</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a750f1fefac69a66d47f053f202e95102" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>swapRows</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1ad8a85814b9fc44098fa04a5e825c11b8" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>T</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a9d5a80b401f55abefe4533cb96fe5eb7" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toAxisAngle</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a765a8706b1acdc36085cb597e6e31c7e" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toEulerAngle2D</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a6c9e0a6ffb6dd2b151ecf9704c591cda" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toEulerAngle3D</name></member>
      <member refid="classtranslotator_1_1Quaternion_1ae95376840e5c36a1e9947474e6d84e80" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toMulMatrix</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a5d9692f952a2742ac82bebd78c043e54" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toRightMulMatrix</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1aa6126bffcd7fb2835d975dac8ddafb23" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toRotMatrix2D</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1ae680e84039ce77df64c4084cfa719d88" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toRotMatrix3D</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1a52ed10a72a7cae25898f2bcdf68380fb" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>toScalar</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a5bd4c159b45d566d6577cda1a12b70be" prot="private" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a0da78d4434ee351568fb18613ee5419a" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1UnitQuaternion_1a7e5cabeb489b3908c9a40d447a67bc54" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>UnitQuaternion</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a326b000833cd521f5e29200d6c055b83" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>w</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a602c9cfe2c8d748949485ab9db49c043" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>w</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a783056bcfdb24ca5407c67313c07af74" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>x</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a8f7ad760b25390156a8c646ea14ee43f" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>x</name></member>
      <member refid="classtranslotator_1_1Quaternion_1adbf7922706956ec1c40c1c99b1f88088" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>y</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a98ecb685b7b599a1cb0eb5b306fa3151" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>y</name></member>
      <member refid="classtranslotator_1_1Quaternion_1a6bb6b65e7e495c508a14bb525b70cd2b" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>z</name></member>
      <member refid="classtranslotator_1_1Quaternion_1aa8ee506030ace03a697f6726308f136e" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>z</name></member>
      <member refid="classtranslotator_1_1MatrixBase_1aa6df03c2dfc985ea79ebb0d9b0787cae" prot="public" virt="non-virtual"><scope>translotator::UnitQuaternion</scope><name>zeros</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
